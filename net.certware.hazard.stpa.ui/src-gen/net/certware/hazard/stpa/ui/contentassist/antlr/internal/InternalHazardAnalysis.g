/*
* generated by Xtext
*/
grammar InternalHazardAnalysis;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package net.certware.hazard.stpa.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package net.certware.hazard.stpa.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import net.certware.hazard.stpa.services.HazardAnalysisGrammarAccess;

}

@parser::members {
 
 	private HazardAnalysisGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(HazardAnalysisGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccident
entryRuleAccident 
:
{ before(grammarAccess.getAccidentRule()); }
	 ruleAccident
{ after(grammarAccess.getAccidentRule()); } 
	 EOF 
;

// Rule Accident
ruleAccident
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccidentAccess().getGroup()); }
(rule__Accident__Group__0)
{ after(grammarAccess.getAccidentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncident
entryRuleIncident 
:
{ before(grammarAccess.getIncidentRule()); }
	 ruleIncident
{ after(grammarAccess.getIncidentRule()); } 
	 EOF 
;

// Rule Incident
ruleIncident
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncidentAccess().getGroup()); }
(rule__Incident__Group__0)
{ after(grammarAccess.getIncidentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRanking
entryRuleRanking 
:
{ before(grammarAccess.getRankingRule()); }
	 ruleRanking
{ after(grammarAccess.getRankingRule()); } 
	 EOF 
;

// Rule Ranking
ruleRanking
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRankingAccess().getAlternatives()); }
(rule__Ranking__Alternatives)
{ after(grammarAccess.getRankingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHazard
entryRuleHazard 
:
{ before(grammarAccess.getHazardRule()); }
	 ruleHazard
{ after(grammarAccess.getHazardRule()); } 
	 EOF 
;

// Rule Hazard
ruleHazard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHazardAccess().getGroup()); }
(rule__Hazard__Group__0)
{ after(grammarAccess.getHazardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRiskLevel
entryRuleRiskLevel 
:
{ before(grammarAccess.getRiskLevelRule()); }
	 ruleRiskLevel
{ after(grammarAccess.getRiskLevelRule()); } 
	 EOF 
;

// Rule RiskLevel
ruleRiskLevel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRiskLevelAccess().getGroup()); }
(rule__RiskLevel__Group__0)
{ after(grammarAccess.getRiskLevelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHazardLevel
entryRuleHazardLevel 
:
{ before(grammarAccess.getHazardLevelRule()); }
	 ruleHazardLevel
{ after(grammarAccess.getHazardLevelRule()); } 
	 EOF 
;

// Rule HazardLevel
ruleHazardLevel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHazardLevelAccess().getGroup()); }
(rule__HazardLevel__Group__0)
{ after(grammarAccess.getHazardLevelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHazardExposure
entryRuleHazardExposure 
:
{ before(grammarAccess.getHazardExposureRule()); }
	 ruleHazardExposure
{ after(grammarAccess.getHazardExposureRule()); } 
	 EOF 
;

// Rule HazardExposure
ruleHazardExposure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHazardExposureAccess().getGroup()); }
(rule__HazardExposure__Group__0)
{ after(grammarAccess.getHazardExposureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHazardAccidentLikelihood
entryRuleHazardAccidentLikelihood 
:
{ before(grammarAccess.getHazardAccidentLikelihoodRule()); }
	 ruleHazardAccidentLikelihood
{ after(grammarAccess.getHazardAccidentLikelihoodRule()); } 
	 EOF 
;

// Rule HazardAccidentLikelihood
ruleHazardAccidentLikelihood
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHazardAccidentLikelihoodAccess().getGroup()); }
(rule__HazardAccidentLikelihood__Group__0)
{ after(grammarAccess.getHazardAccidentLikelihoodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHazardSeverity
entryRuleHazardSeverity 
:
{ before(grammarAccess.getHazardSeverityRule()); }
	 ruleHazardSeverity
{ after(grammarAccess.getHazardSeverityRule()); } 
	 EOF 
;

// Rule HazardSeverity
ruleHazardSeverity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHazardSeverityAccess().getValueAssignment()); }
(rule__HazardSeverity__ValueAssignment)
{ after(grammarAccess.getHazardSeverityAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHazardLikelihood
entryRuleHazardLikelihood 
:
{ before(grammarAccess.getHazardLikelihoodRule()); }
	 ruleHazardLikelihood
{ after(grammarAccess.getHazardLikelihoodRule()); } 
	 EOF 
;

// Rule HazardLikelihood
ruleHazardLikelihood
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHazardLikelihoodAccess().getValueAssignment()); }
(rule__HazardLikelihood__ValueAssignment)
{ after(grammarAccess.getHazardLikelihoodAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getGroup()); }
(rule__Constraint__Group__0)
{ after(grammarAccess.getConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequirement
entryRuleRequirement 
:
{ before(grammarAccess.getRequirementRule()); }
	 ruleRequirement
{ after(grammarAccess.getRequirementRule()); } 
	 EOF 
;

// Rule Requirement
ruleRequirement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequirementAccess().getGroup()); }
(rule__Requirement__Group__0)
{ after(grammarAccess.getRequirementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDesign
entryRuleDesign 
:
{ before(grammarAccess.getDesignRule()); }
	 ruleDesign
{ after(grammarAccess.getDesignRule()); } 
	 EOF 
;

// Rule Design
ruleDesign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDesignAccess().getGroup()); }
(rule__Design__Group__0)
{ after(grammarAccess.getDesignAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScenario
entryRuleScenario 
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScenarioAccess().getGroup()); }
(rule__Scenario__Group__0)
{ after(grammarAccess.getScenarioAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleControl
entryRuleControl 
:
{ before(grammarAccess.getControlRule()); }
	 ruleControl
{ after(grammarAccess.getControlRule()); } 
	 EOF 
;

// Rule Control
ruleControl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControlAccess().getGroup()); }
(rule__Control__Group__0)
{ after(grammarAccess.getControlAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNote
entryRuleNote 
:
{ before(grammarAccess.getNoteRule()); }
	 ruleNote
{ after(grammarAccess.getNoteRule()); } 
	 EOF 
;

// Rule Note
ruleNote
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoteAccess().getGroup()); }
(rule__Note__Group__0)
{ after(grammarAccess.getNoteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Ranking__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRankingAccess().getGroup_0()); }
(rule__Ranking__Group_0__0)
{ after(grammarAccess.getRankingAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRankingAccess().getGroup_1()); }
(rule__Ranking__Group_1__0)
{ after(grammarAccess.getRankingAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAccidentsAssignment_0()); }
(rule__Model__AccidentsAssignment_0)*
{ after(grammarAccess.getModelAccess().getAccidentsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getIndicentsAssignment_1()); }
(rule__Model__IndicentsAssignment_1)*
{ after(grammarAccess.getModelAccess().getIndicentsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Accident__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Accident__Group__0__Impl
	rule__Accident__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Accident__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccidentAccess().getAccidentKeyword_0()); }

	'Accident' 

{ after(grammarAccess.getAccidentAccess().getAccidentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Accident__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Accident__Group__1__Impl
	rule__Accident__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Accident__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccidentAccess().getDescAssignment_1()); }
(rule__Accident__DescAssignment_1)
{ after(grammarAccess.getAccidentAccess().getDescAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Accident__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Accident__Group__2__Impl
	rule__Accident__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Accident__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccidentAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAccidentAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Accident__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Accident__Group__3__Impl
	rule__Accident__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Accident__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccidentAccess().getRankingAssignment_3()); }
(rule__Accident__RankingAssignment_3)
{ after(grammarAccess.getAccidentAccess().getRankingAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Accident__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Accident__Group__4__Impl
	rule__Accident__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Accident__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAccidentAccess().getHazardsAssignment_4()); }
(rule__Accident__HazardsAssignment_4)
{ after(grammarAccess.getAccidentAccess().getHazardsAssignment_4()); }
)
(
{ before(grammarAccess.getAccidentAccess().getHazardsAssignment_4()); }
(rule__Accident__HazardsAssignment_4)*
{ after(grammarAccess.getAccidentAccess().getHazardsAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Accident__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Accident__Group__5__Impl
	rule__Accident__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Accident__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccidentAccess().getNotesAssignment_5()); }
(rule__Accident__NotesAssignment_5)*
{ after(grammarAccess.getAccidentAccess().getNotesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Accident__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Accident__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Accident__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccidentAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getAccidentAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Incident__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Incident__Group__0__Impl
	rule__Incident__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Incident__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncidentAccess().getIncidentKeyword_0()); }

	'Incident' 

{ after(grammarAccess.getIncidentAccess().getIncidentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Incident__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Incident__Group__1__Impl
	rule__Incident__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Incident__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncidentAccess().getDescAssignment_1()); }
(rule__Incident__DescAssignment_1)
{ after(grammarAccess.getIncidentAccess().getDescAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Incident__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Incident__Group__2__Impl
	rule__Incident__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Incident__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncidentAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getIncidentAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Incident__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Incident__Group__3__Impl
	rule__Incident__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Incident__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncidentAccess().getRankingAssignment_3()); }
(rule__Incident__RankingAssignment_3)
{ after(grammarAccess.getIncidentAccess().getRankingAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Incident__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Incident__Group__4__Impl
	rule__Incident__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Incident__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getIncidentAccess().getHazardsAssignment_4()); }
(rule__Incident__HazardsAssignment_4)
{ after(grammarAccess.getIncidentAccess().getHazardsAssignment_4()); }
)
(
{ before(grammarAccess.getIncidentAccess().getHazardsAssignment_4()); }
(rule__Incident__HazardsAssignment_4)*
{ after(grammarAccess.getIncidentAccess().getHazardsAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Incident__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Incident__Group__5__Impl
	rule__Incident__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Incident__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncidentAccess().getNotesAssignment_5()); }
(rule__Incident__NotesAssignment_5)*
{ after(grammarAccess.getIncidentAccess().getNotesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Incident__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Incident__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Incident__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncidentAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getIncidentAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Ranking__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ranking__Group_0__0__Impl
	rule__Ranking__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ranking__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRankingAccess().getSeverityKeyword_0_0()); }

	'Severity' 

{ after(grammarAccess.getRankingAccess().getSeverityKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ranking__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ranking__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ranking__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRankingAccess().getIDTerminalRuleCall_0_1()); }
	RULE_ID
{ after(grammarAccess.getRankingAccess().getIDTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ranking__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ranking__Group_1__0__Impl
	rule__Ranking__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ranking__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRankingAccess().getPriorityKeyword_1_0()); }

	'Priority' 

{ after(grammarAccess.getRankingAccess().getPriorityKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ranking__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ranking__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ranking__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRankingAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getRankingAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Hazard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hazard__Group__0__Impl
	rule__Hazard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hazard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccess().getHazardKeyword_0()); }

	'Hazard' 

{ after(grammarAccess.getHazardAccess().getHazardKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hazard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hazard__Group__1__Impl
	rule__Hazard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Hazard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccess().getDescAssignment_1()); }
(rule__Hazard__DescAssignment_1)
{ after(grammarAccess.getHazardAccess().getDescAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hazard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hazard__Group__2__Impl
	rule__Hazard__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Hazard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getHazardAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hazard__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hazard__Group__3__Impl
	rule__Hazard__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Hazard__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccess().getLevelAssignment_3()); }
(rule__Hazard__LevelAssignment_3)
{ after(grammarAccess.getHazardAccess().getLevelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hazard__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hazard__Group__4__Impl
	rule__Hazard__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Hazard__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccess().getRiskAssignment_4()); }
(rule__Hazard__RiskAssignment_4)
{ after(grammarAccess.getHazardAccess().getRiskAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hazard__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hazard__Group__5__Impl
	rule__Hazard__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Hazard__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getHazardAccess().getConstraintsAssignment_5()); }
(rule__Hazard__ConstraintsAssignment_5)
{ after(grammarAccess.getHazardAccess().getConstraintsAssignment_5()); }
)
(
{ before(grammarAccess.getHazardAccess().getConstraintsAssignment_5()); }
(rule__Hazard__ConstraintsAssignment_5)*
{ after(grammarAccess.getHazardAccess().getConstraintsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hazard__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hazard__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hazard__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getHazardAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__RiskLevel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RiskLevel__Group__0__Impl
	rule__RiskLevel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RiskLevel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRiskLevelAccess().getRiskKeyword_0()); }

	'Risk' 

{ after(grammarAccess.getRiskLevelAccess().getRiskKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RiskLevel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RiskLevel__Group__1__Impl
	rule__RiskLevel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RiskLevel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRiskLevelAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getRiskLevelAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RiskLevel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RiskLevel__Group__2__Impl
	rule__RiskLevel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RiskLevel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRiskLevelAccess().getExposureAssignment_2()); }
(rule__RiskLevel__ExposureAssignment_2)
{ after(grammarAccess.getRiskLevelAccess().getExposureAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RiskLevel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RiskLevel__Group__3__Impl
	rule__RiskLevel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RiskLevel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRiskLevelAccess().getLikelihoodAssignment_3()); }
(rule__RiskLevel__LikelihoodAssignment_3)
{ after(grammarAccess.getRiskLevelAccess().getLikelihoodAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RiskLevel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RiskLevel__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RiskLevel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRiskLevelAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getRiskLevelAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__HazardLevel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardLevel__Group__0__Impl
	rule__HazardLevel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardLevel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardLevelAccess().getSeverityKeyword_0()); }

	'Severity' 

{ after(grammarAccess.getHazardLevelAccess().getSeverityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardLevel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardLevel__Group__1__Impl
	rule__HazardLevel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardLevel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardLevelAccess().getSeverityAssignment_1()); }
(rule__HazardLevel__SeverityAssignment_1)
{ after(grammarAccess.getHazardLevelAccess().getSeverityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardLevel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardLevel__Group__2__Impl
	rule__HazardLevel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardLevel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardLevelAccess().getLikelihoodKeyword_2()); }

	'Likelihood' 

{ after(grammarAccess.getHazardLevelAccess().getLikelihoodKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardLevel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardLevel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardLevel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardLevelAccess().getLikelihoodAssignment_3()); }
(rule__HazardLevel__LikelihoodAssignment_3)
{ after(grammarAccess.getHazardLevelAccess().getLikelihoodAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__HazardExposure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardExposure__Group__0__Impl
	rule__HazardExposure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardExposure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardExposureAccess().getExposureKeyword_0()); }

	'Exposure' 

{ after(grammarAccess.getHazardExposureAccess().getExposureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardExposure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardExposure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardExposure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardExposureAccess().getExposureAssignment_1()); }
(rule__HazardExposure__ExposureAssignment_1)
{ after(grammarAccess.getHazardExposureAccess().getExposureAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HazardAccidentLikelihood__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardAccidentLikelihood__Group__0__Impl
	rule__HazardAccidentLikelihood__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardAccidentLikelihood__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccidentLikelihoodAccess().getLikelihoodKeyword_0()); }

	'Likelihood' 

{ after(grammarAccess.getHazardAccidentLikelihoodAccess().getLikelihoodKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardAccidentLikelihood__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardAccidentLikelihood__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardAccidentLikelihood__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccidentLikelihoodAccess().getLikelihoodAssignment_1()); }
(rule__HazardAccidentLikelihood__LikelihoodAssignment_1)
{ after(grammarAccess.getHazardAccidentLikelihoodAccess().getLikelihoodAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }

	'Constraint' 

{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getConstraintAssignment_1()); }
(rule__Constraint__ConstraintAssignment_1)
{ after(grammarAccess.getConstraintAccess().getConstraintAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__3__Impl
	rule__Constraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRequirementsAssignment_3()); }
(rule__Constraint__RequirementsAssignment_3)*
{ after(grammarAccess.getConstraintAccess().getRequirementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__4__Impl
	rule__Constraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getScenariosAssignment_4()); }
(rule__Constraint__ScenariosAssignment_4)*
{ after(grammarAccess.getConstraintAccess().getScenariosAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__5__Impl
	rule__Constraint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getControlsAssignment_5()); }
(rule__Constraint__ControlsAssignment_5)*
{ after(grammarAccess.getConstraintAccess().getControlsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__6__Impl
	rule__Constraint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getNotesAssignment_6()); }
(rule__Constraint__NotesAssignment_6)*
{ after(grammarAccess.getConstraintAccess().getNotesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Requirement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__0__Impl
	rule__Requirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getRequirementKeyword_0()); }

	'Requirement' 

{ after(grammarAccess.getRequirementAccess().getRequirementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__1__Impl
	rule__Requirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getRequirementAssignment_1()); }
(rule__Requirement__RequirementAssignment_1)
{ after(grammarAccess.getRequirementAccess().getRequirementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__2__Impl
	rule__Requirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__3__Impl
	rule__Requirement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getDesignsAssignment_3()); }
(rule__Requirement__DesignsAssignment_3)*
{ after(grammarAccess.getRequirementAccess().getDesignsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__4__Impl
	rule__Requirement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getNotesAssignment_4()); }
(rule__Requirement__NotesAssignment_4)*
{ after(grammarAccess.getRequirementAccess().getNotesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Design__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__0__Impl
	rule__Design__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getAllocationKeyword_0()); }

	'Allocation' 

{ after(grammarAccess.getDesignAccess().getAllocationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__1__Impl
	rule__Design__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getAllocationAssignment_1()); }
(rule__Design__AllocationAssignment_1)
{ after(grammarAccess.getDesignAccess().getAllocationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__2__Impl
	rule__Design__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getGroup_2()); }
(rule__Design__Group_2__0)?
{ after(grammarAccess.getDesignAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getGroup_3()); }
(rule__Design__Group_3__0)?
{ after(grammarAccess.getDesignAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Design__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group_2__0__Impl
	rule__Design__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getAnalysisKeyword_2_0()); }

	'Analysis' 

{ after(grammarAccess.getDesignAccess().getAnalysisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getAnalysisAssignment_2_1()); }
(rule__Design__AnalysisAssignment_2_1)
{ after(grammarAccess.getDesignAccess().getAnalysisAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Design__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group_3__0__Impl
	rule__Design__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getRationaleKeyword_3_0()); }

	'Rationale' 

{ after(grammarAccess.getDesignAccess().getRationaleKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getRationaleAssignment_3_1()); }
(rule__Design__RationaleAssignment_3_1)
{ after(grammarAccess.getDesignAccess().getRationaleAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Scenario__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__0__Impl
	rule__Scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }

	'Scenario' 

{ after(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__1__Impl
	rule__Scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getScenarioAssignment_1()); }
(rule__Scenario__ScenarioAssignment_1)
{ after(grammarAccess.getScenarioAccess().getScenarioAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getScenarioAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Control__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control__Group__0__Impl
	rule__Control__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlAccess().getControlKeyword_0()); }

	'Control' 

{ after(grammarAccess.getControlAccess().getControlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control__Group__1__Impl
	rule__Control__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Control__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlAccess().getControlAssignment_1()); }
(rule__Control__ControlAssignment_1)
{ after(grammarAccess.getControlAccess().getControlAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getControlAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Note__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__0__Impl
	rule__Note__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNoteKeyword_0()); }

	'Note' 

{ after(grammarAccess.getNoteAccess().getNoteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__1__Impl
	rule__Note__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNoteAssignment_1()); }
(rule__Note__NoteAssignment_1)
{ after(grammarAccess.getNoteAccess().getNoteAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getNoteAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__AccidentsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAccidentsAccidentParserRuleCall_0_0()); }
	ruleAccident{ after(grammarAccess.getModelAccess().getAccidentsAccidentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__IndicentsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getIndicentsIncidentParserRuleCall_1_0()); }
	ruleIncident{ after(grammarAccess.getModelAccess().getIndicentsIncidentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Accident__DescAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccidentAccess().getDescSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getAccidentAccess().getDescSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Accident__RankingAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccidentAccess().getRankingRankingParserRuleCall_3_0()); }
	ruleRanking{ after(grammarAccess.getAccidentAccess().getRankingRankingParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Accident__HazardsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccidentAccess().getHazardsHazardParserRuleCall_4_0()); }
	ruleHazard{ after(grammarAccess.getAccidentAccess().getHazardsHazardParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Accident__NotesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccidentAccess().getNotesNoteParserRuleCall_5_0()); }
	ruleNote{ after(grammarAccess.getAccidentAccess().getNotesNoteParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Incident__DescAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncidentAccess().getDescSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getIncidentAccess().getDescSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Incident__RankingAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncidentAccess().getRankingRankingParserRuleCall_3_0()); }
	ruleRanking{ after(grammarAccess.getIncidentAccess().getRankingRankingParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Incident__HazardsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncidentAccess().getHazardsHazardParserRuleCall_4_0()); }
	ruleHazard{ after(grammarAccess.getIncidentAccess().getHazardsHazardParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Incident__NotesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncidentAccess().getNotesNoteParserRuleCall_5_0()); }
	ruleNote{ after(grammarAccess.getIncidentAccess().getNotesNoteParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hazard__DescAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccess().getDescSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getHazardAccess().getDescSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hazard__LevelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccess().getLevelHazardLevelParserRuleCall_3_0()); }
	ruleHazardLevel{ after(grammarAccess.getHazardAccess().getLevelHazardLevelParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hazard__RiskAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccess().getRiskRiskLevelParserRuleCall_4_0()); }
	ruleRiskLevel{ after(grammarAccess.getHazardAccess().getRiskRiskLevelParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hazard__ConstraintsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccess().getConstraintsConstraintParserRuleCall_5_0()); }
	ruleConstraint{ after(grammarAccess.getHazardAccess().getConstraintsConstraintParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RiskLevel__ExposureAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRiskLevelAccess().getExposureHazardExposureParserRuleCall_2_0()); }
	ruleHazardExposure{ after(grammarAccess.getRiskLevelAccess().getExposureHazardExposureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RiskLevel__LikelihoodAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRiskLevelAccess().getLikelihoodHazardAccidentLikelihoodParserRuleCall_3_0()); }
	ruleHazardAccidentLikelihood{ after(grammarAccess.getRiskLevelAccess().getLikelihoodHazardAccidentLikelihoodParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HazardLevel__SeverityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardLevelAccess().getSeverityHazardSeverityParserRuleCall_1_0()); }
	ruleHazardSeverity{ after(grammarAccess.getHazardLevelAccess().getSeverityHazardSeverityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HazardLevel__LikelihoodAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardLevelAccess().getLikelihoodHazardLikelihoodParserRuleCall_3_0()); }
	ruleHazardLikelihood{ after(grammarAccess.getHazardLevelAccess().getLikelihoodHazardLikelihoodParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HazardExposure__ExposureAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardExposureAccess().getExposureSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getHazardExposureAccess().getExposureSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HazardAccidentLikelihood__LikelihoodAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardAccidentLikelihoodAccess().getLikelihoodSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getHazardAccidentLikelihoodAccess().getLikelihoodSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HazardSeverity__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardSeverityAccess().getValueIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getHazardSeverityAccess().getValueIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HazardLikelihood__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardLikelihoodAccess().getValueIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getHazardLikelihoodAccess().getValueIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ConstraintAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getConstraintSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getConstraintAccess().getConstraintSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__RequirementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRequirementsRequirementParserRuleCall_3_0()); }
	ruleRequirement{ after(grammarAccess.getConstraintAccess().getRequirementsRequirementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ScenariosAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getScenariosScenarioParserRuleCall_4_0()); }
	ruleScenario{ after(grammarAccess.getConstraintAccess().getScenariosScenarioParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ControlsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getControlsControlParserRuleCall_5_0()); }
	ruleControl{ after(grammarAccess.getConstraintAccess().getControlsControlParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__NotesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getNotesNoteParserRuleCall_6_0()); }
	ruleNote{ after(grammarAccess.getConstraintAccess().getNotesNoteParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__RequirementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getRequirementSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getRequirementAccess().getRequirementSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__DesignsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getDesignsDesignParserRuleCall_3_0()); }
	ruleDesign{ after(grammarAccess.getRequirementAccess().getDesignsDesignParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__NotesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getNotesNoteParserRuleCall_4_0()); }
	ruleNote{ after(grammarAccess.getRequirementAccess().getNotesNoteParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Design__AllocationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getAllocationSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDesignAccess().getAllocationSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Design__AnalysisAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getAnalysisSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getDesignAccess().getAnalysisSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Design__RationaleAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getRationaleSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getDesignAccess().getRationaleSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__ScenarioAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getScenarioSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getScenarioAccess().getScenarioSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Control__ControlAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlAccess().getControlSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getControlAccess().getControlSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__NoteAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNoteSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getNoteAccess().getNoteSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



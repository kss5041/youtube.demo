/*
* NOT generated by Xtext
*/
package net.certware.hazard.stpa.ui.labeling

import com.google.inject.Inject
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import net.certware.hazard.stpa.hazardAnalysis.Model
import net.certware.hazard.stpa.hazardAnalysis.Accident
import net.certware.hazard.stpa.hazardAnalysis.Incident
import net.certware.hazard.stpa.hazardAnalysis.Hazard
import net.certware.hazard.stpa.hazardAnalysis.RiskLevel
import net.certware.hazard.stpa.hazardAnalysis.HazardLevel
import net.certware.hazard.stpa.hazardAnalysis.HazardExposure
import net.certware.hazard.stpa.hazardAnalysis.HazardAccidentLikelihood
import net.certware.hazard.stpa.hazardAnalysis.HazardSeverity
import net.certware.hazard.stpa.hazardAnalysis.HazardLikelihood
import net.certware.hazard.stpa.hazardAnalysis.Constraint
import net.certware.hazard.stpa.hazardAnalysis.Requirement
import net.certware.hazard.stpa.hazardAnalysis.Design
import net.certware.hazard.stpa.hazardAnalysis.Scenario
import net.certware.hazard.stpa.hazardAnalysis.Control
import net.certware.hazard.stpa.hazardAnalysis.Note

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class HazardAnalysisLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	def image(Model m) {
		'obj16/model.gif'
	}
	
	def image(Accident a) {
		'obj16/accident.gif'
	}
	
	def image(Incident i) {
		'obj16/incident.gif'
	}
	
	def image(Hazard h) {
		'obj16/hazard.gif'
	}
	
	def image(RiskLevel r) {
		'obj16/risklevel.gif'
	}
	
	def image(HazardLevel h) {
		'obj16/hazardlevel.gif'
	}
	
	def image(HazardExposure h) {
		'obj16/hazardexposure.gif'
	}
	
	def image(HazardAccidentLikelihood h) {
		'obj16/hazardaccidentlikelihood.gif'
	}
	
	def image(HazardSeverity h) {
		'obj16/hazardseverity.gif'
	}
	
	def image(HazardLikelihood h) {
		'obj16/hazardlikelihood.gif'
	}
	
	def image(Constraint c) {
		'obj16/constraint.gif'
	}
	
	def image(Requirement r) {
		'obj16/requirement.gif'
	}
	
	def image(Design d) {
		'obj16/design.gif'
	}
	
	def image(Scenario s) {
		'obj16/scenario.gif'
	}
	
	def image(Control c) {
		'obj16/control.gif'
	}
	
	def image(Note n) {
		'obj16/note.gif'
	}
	

	/*
	 * text reponses
	 */
	def text(Model e) {
		'Model'
	}

	def text(Accident e) {
		'Accident' + ' ' + e.ranking
	}
	
	def text(Incident e) {
		'Incident' + ' ' + e.ranking
	}
	
	def text(Hazard e) {
		'Hazard'		
	}
	
	def text(RiskLevel e) {
		'Risk Level'		
	}	
	
	def text(HazardLevel e) {
		'Hazard Level'		
	}
	
	def text(HazardExposure e) {
		'Exposure' + ' ' + e.exposure
	} 
	
	def text(HazardAccidentLikelihood e) {
		'Accident Likelihood' + ' ' + e.likelihood
	}
	
	def text(HazardSeverity e) {
		'Hazard Severity' + ' ' + e.value
	}
	
	def text(HazardLikelihood e) {
		'Hazard Likelihood' + ' ' + e.value		
	}
	
	def text(Constraint e) {
		'Constraint' + ' ' + e.constraint
	}
	
	def text(Requirement e) {
		'Requirement' + ' ' + e.requirement
	}
	
	def text(Design e) {
		'Design' + ' ' + e.allocation		
	}
	
	def text(Scenario e) {
		'Scenario' + ' ' + e.scenario		
	}
	
	def text(Control e) {
		'Control' + ' ' + e.control
	}
	
	def text(Note e) {
		'Note' + ' ' + e.note
	}

}

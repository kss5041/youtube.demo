/*
* generated by Xtext
*/
package net.certware.intent.state.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class StateSpecificationGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class SpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Specification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpecificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cDevicesKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cDevicesAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cDevicesDeviceParserRuleCall_2_2_0 = (RuleCall)cDevicesAssignment_2_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cComponentsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cComponentsComponentParserRuleCall_3_0 = (RuleCall)cComponentsAssignment_3.eContents().get(0);
		
		/// *
		// * A state specification consists of one or more components.
		// * / Specification:
		//	"specification" name=ID ("[" "devices" devices+=Device* "]")? components+=Component+;
		public ParserRule getRule() { return rule; }

		//"specification" name=ID ("[" "devices" devices+=Device* "]")? components+=Component+
		public Group getGroup() { return cGroup; }

		//"specification"
		public Keyword getSpecificationKeyword_0() { return cSpecificationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("[" "devices" devices+=Device* "]")?
		public Group getGroup_2() { return cGroup_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }

		//"devices"
		public Keyword getDevicesKeyword_2_1() { return cDevicesKeyword_2_1; }

		//devices+=Device*
		public Assignment getDevicesAssignment_2_2() { return cDevicesAssignment_2_2; }

		//Device
		public RuleCall getDevicesDeviceParserRuleCall_2_2_0() { return cDevicesDeviceParserRuleCall_2_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2_3() { return cRightSquareBracketKeyword_2_3; }

		//components+=Component+
		public Assignment getComponentsAssignment_3() { return cComponentsAssignment_3; }

		//Component
		public RuleCall getComponentsComponentParserRuleCall_3_0() { return cComponentsComponentParserRuleCall_3_0; }
	}

	public class BigDecimalTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BigDecimalType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//BigDecimalType returns ecore::EBigDecimal:
		//	"-"? INT ("." INT)?;
		public ParserRule getRule() { return rule; }

		//"-"? INT ("." INT)?
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//("." INT)?
		public Group getGroup_2() { return cGroup_2; }

		//"."
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_2_1() { return cINTTerminalRuleCall_2_1; }
	}

	public class ModeElementTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModeElementType");
		private final Assignment cElementTypeAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cElementTypeAlternatives_0 = (Alternatives)cElementTypeAssignment.eContents().get(0);
		private final Keyword cElementTypeSupervisoryKeyword_0_0 = (Keyword)cElementTypeAlternatives_0.eContents().get(0);
		private final Keyword cElementTypeOperatingKeyword_0_1 = (Keyword)cElementTypeAlternatives_0.eContents().get(1);
		private final Keyword cElementTypeOtherKeyword_0_2 = (Keyword)cElementTypeAlternatives_0.eContents().get(2);
		
		//ModeElementType:
		//	elementType=("supervisory" | "operating" | "other");
		public ParserRule getRule() { return rule; }

		//elementType=("supervisory" | "operating" | "other")
		public Assignment getElementTypeAssignment() { return cElementTypeAssignment; }

		//"supervisory" | "operating" | "other"
		public Alternatives getElementTypeAlternatives_0() { return cElementTypeAlternatives_0; }

		//"supervisory"
		public Keyword getElementTypeSupervisoryKeyword_0_0() { return cElementTypeSupervisoryKeyword_0_0; }

		//"operating"
		public Keyword getElementTypeOperatingKeyword_0_1() { return cElementTypeOperatingKeyword_0_1; }

		//"other"
		public Keyword getElementTypeOtherKeyword_0_2() { return cElementTypeOtherKeyword_0_2; }
	}

	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cModesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cModesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cModesModeElementParserRuleCall_2_1_0 = (RuleCall)cModesAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cStatesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cStatesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cStatesStateElementParserRuleCall_3_1_0 = (RuleCall)cStatesAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInputsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInputsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInputsComponentInputParserRuleCall_4_1_0 = (RuleCall)cInputsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOutputsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cOutputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOutputsComponentOutputParserRuleCall_5_1_0 = (RuleCall)cOutputsAssignment_5_1.eContents().get(0);
		
		//Component:
		//	"component" name=ID ("modes" modes+=ModeElement*)? ("states" states+=StateElement*)? ("inputs"
		//	inputs+=ComponentInput*)? ("outputs" outputs+=ComponentOutput*)?;
		public ParserRule getRule() { return rule; }

		//"component" name=ID ("modes" modes+=ModeElement*)? ("states" states+=StateElement*)? ("inputs" inputs+=ComponentInput*)?
		//("outputs" outputs+=ComponentOutput*)?
		public Group getGroup() { return cGroup; }

		//"component"
		public Keyword getComponentKeyword_0() { return cComponentKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("modes" modes+=ModeElement*)?
		public Group getGroup_2() { return cGroup_2; }

		//"modes"
		public Keyword getModesKeyword_2_0() { return cModesKeyword_2_0; }

		//modes+=ModeElement*
		public Assignment getModesAssignment_2_1() { return cModesAssignment_2_1; }

		//ModeElement
		public RuleCall getModesModeElementParserRuleCall_2_1_0() { return cModesModeElementParserRuleCall_2_1_0; }

		//("states" states+=StateElement*)?
		public Group getGroup_3() { return cGroup_3; }

		//"states"
		public Keyword getStatesKeyword_3_0() { return cStatesKeyword_3_0; }

		//states+=StateElement*
		public Assignment getStatesAssignment_3_1() { return cStatesAssignment_3_1; }

		//StateElement
		public RuleCall getStatesStateElementParserRuleCall_3_1_0() { return cStatesStateElementParserRuleCall_3_1_0; }

		//("inputs" inputs+=ComponentInput*)?
		public Group getGroup_4() { return cGroup_4; }

		//"inputs"
		public Keyword getInputsKeyword_4_0() { return cInputsKeyword_4_0; }

		//inputs+=ComponentInput*
		public Assignment getInputsAssignment_4_1() { return cInputsAssignment_4_1; }

		//ComponentInput
		public RuleCall getInputsComponentInputParserRuleCall_4_1_0() { return cInputsComponentInputParserRuleCall_4_1_0; }

		//("outputs" outputs+=ComponentOutput*)?
		public Group getGroup_5() { return cGroup_5; }

		//"outputs"
		public Keyword getOutputsKeyword_5_0() { return cOutputsKeyword_5_0; }

		//outputs+=ComponentOutput*
		public Assignment getOutputsAssignment_5_1() { return cOutputsAssignment_5_1; }

		//ComponentOutput
		public RuleCall getOutputsComponentOutputParserRuleCall_5_1_0() { return cOutputsComponentOutputParserRuleCall_5_1_0; }
	}

	public class ModeElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModeElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInferredAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cInferredInferredKeyword_0_0 = (Keyword)cInferredAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeModeElementTypeParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cModesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cModesModeVariableParserRuleCall_2_0 = (RuleCall)cModesAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ModeElement:
		//	inferred?="inferred"? type=ModeElementType modes+=ModeVariable+ ";";
		public ParserRule getRule() { return rule; }

		//inferred?="inferred"? type=ModeElementType modes+=ModeVariable+ ";"
		public Group getGroup() { return cGroup; }

		//inferred?="inferred"?
		public Assignment getInferredAssignment_0() { return cInferredAssignment_0; }

		//"inferred"
		public Keyword getInferredInferredKeyword_0_0() { return cInferredInferredKeyword_0_0; }

		//type=ModeElementType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//ModeElementType
		public RuleCall getTypeModeElementTypeParserRuleCall_1_0() { return cTypeModeElementTypeParserRuleCall_1_0; }

		//modes+=ModeVariable+
		public Assignment getModesAssignment_2() { return cModesAssignment_2; }

		//ModeVariable
		public RuleCall getModesModeVariableParserRuleCall_2_0() { return cModesModeVariableParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class StateElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInferredAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cInferredInferredKeyword_0_0 = (Keyword)cInferredAssignment_0.eContents().get(0);
		private final Assignment cStatesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStatesStateVariableParserRuleCall_1_0 = (RuleCall)cStatesAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//StateElement:
		//	inferred?="inferred"? states+=StateVariable+ ";";
		public ParserRule getRule() { return rule; }

		//inferred?="inferred"? states+=StateVariable+ ";"
		public Group getGroup() { return cGroup; }

		//inferred?="inferred"?
		public Assignment getInferredAssignment_0() { return cInferredAssignment_0; }

		//"inferred"
		public Keyword getInferredInferredKeyword_0_0() { return cInferredInferredKeyword_0_0; }

		//states+=StateVariable+
		public Assignment getStatesAssignment_1() { return cStatesAssignment_1; }

		//StateVariable
		public RuleCall getStatesStateVariableParserRuleCall_1_0() { return cStatesStateVariableParserRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class StateVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescSTRINGTerminalRuleCall_1_0 = (RuleCall)cDescAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStateStateParserRuleCall_3_0 = (RuleCall)cStateAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//StateVariable:
		//	"state" desc=STRING "{" state+=State+ "}";
		public ParserRule getRule() { return rule; }

		//"state" desc=STRING "{" state+=State+ "}"
		public Group getGroup() { return cGroup; }

		//"state"
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }

		//desc=STRING
		public Assignment getDescAssignment_1() { return cDescAssignment_1; }

		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_1_0() { return cDescSTRINGTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//state+=State+
		public Assignment getStateAssignment_3() { return cStateAssignment_3; }

		//State
		public RuleCall getStateStateParserRuleCall_3_0() { return cStateStateParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInitialAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cInitialInitialKeyword_0_0 = (Keyword)cInitialAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//State:
		//	initial?="initial"? value=STRING;
		public ParserRule getRule() { return rule; }

		//initial?="initial"? value=STRING
		public Group getGroup() { return cGroup; }

		//initial?="initial"?
		public Assignment getInitialAssignment_0() { return cInitialAssignment_0; }

		//"initial"
		public Keyword getInitialInitialKeyword_0_0() { return cInitialInitialKeyword_0_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }
	}

	public class ModeVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModeVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescSTRINGTerminalRuleCall_1_0 = (RuleCall)cDescAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cModesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cModesModeParserRuleCall_3_0 = (RuleCall)cModesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ModeVariable:
		//	"mode" desc=STRING "{" modes+=Mode+ "}";
		public ParserRule getRule() { return rule; }

		//"mode" desc=STRING "{" modes+=Mode+ "}"
		public Group getGroup() { return cGroup; }

		//"mode"
		public Keyword getModeKeyword_0() { return cModeKeyword_0; }

		//desc=STRING
		public Assignment getDescAssignment_1() { return cDescAssignment_1; }

		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_1_0() { return cDescSTRINGTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//modes+=Mode+
		public Assignment getModesAssignment_3() { return cModesAssignment_3; }

		//Mode
		public RuleCall getModesModeParserRuleCall_3_0() { return cModesModeParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ModeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInitialAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cInitialInitialKeyword_0_0 = (Keyword)cInitialAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//Mode:
		//	initial?="initial"? value=STRING;
		public ParserRule getRule() { return rule; }

		//initial?="initial"? value=STRING
		public Group getGroup() { return cGroup; }

		//initial?="initial"?
		public Assignment getInitialAssignment_0() { return cInitialAssignment_0; }

		//"initial"
		public Keyword getInitialInitialKeyword_0_0() { return cInitialInitialKeyword_0_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }
	}

	public class DeviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Device");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeviceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDescAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInputsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInputsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInputsDeviceInputParserRuleCall_3_1_0 = (RuleCall)cInputsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOutputsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOutputsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOutputsDeviceOutputParserRuleCall_4_1_0 = (RuleCall)cOutputsAssignment_4_1.eContents().get(0);
		
		//Device:
		//	"device" name=ID desc=STRING ("inputs" inputs+=DeviceInput*)? ("outputs" outputs+=DeviceOutput*)?;
		public ParserRule getRule() { return rule; }

		//"device" name=ID desc=STRING ("inputs" inputs+=DeviceInput*)? ("outputs" outputs+=DeviceOutput*)?
		public Group getGroup() { return cGroup; }

		//"device"
		public Keyword getDeviceKeyword_0() { return cDeviceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//desc=STRING
		public Assignment getDescAssignment_2() { return cDescAssignment_2; }

		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_2_0() { return cDescSTRINGTerminalRuleCall_2_0; }

		//("inputs" inputs+=DeviceInput*)?
		public Group getGroup_3() { return cGroup_3; }

		//"inputs"
		public Keyword getInputsKeyword_3_0() { return cInputsKeyword_3_0; }

		//inputs+=DeviceInput*
		public Assignment getInputsAssignment_3_1() { return cInputsAssignment_3_1; }

		//DeviceInput
		public RuleCall getInputsDeviceInputParserRuleCall_3_1_0() { return cInputsDeviceInputParserRuleCall_3_1_0; }

		//("outputs" outputs+=DeviceOutput*)?
		public Group getGroup_4() { return cGroup_4; }

		//"outputs"
		public Keyword getOutputsKeyword_4_0() { return cOutputsKeyword_4_0; }

		//outputs+=DeviceOutput*
		public Assignment getOutputsAssignment_4_1() { return cOutputsAssignment_4_1; }

		//DeviceOutput
		public RuleCall getOutputsDeviceOutputParserRuleCall_4_1_0() { return cOutputsDeviceOutputParserRuleCall_4_1_0; }
	}

	public class DeviceInputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeviceInput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cValueKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cIoAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cIoInputParserRuleCall_2_1_0 = (RuleCall)cIoAssignment_2_1.eContents().get(0);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSourceComponentCrossReference_4_0 = (CrossReference)cSourceAssignment_4.eContents().get(0);
		private final RuleCall cSourceComponentIDTerminalRuleCall_4_0_1 = (RuleCall)cSourceComponentCrossReference_4_0.eContents().get(1);
		
		//DeviceInput:
		//	"input" name=ID ("value" io=Input)? "source" source=[Component];
		public ParserRule getRule() { return rule; }

		//"input" name=ID ("value" io=Input)? "source" source=[Component]
		public Group getGroup() { return cGroup; }

		//"input"
		public Keyword getInputKeyword_0() { return cInputKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("value" io=Input)?
		public Group getGroup_2() { return cGroup_2; }

		//"value"
		public Keyword getValueKeyword_2_0() { return cValueKeyword_2_0; }

		//io=Input
		public Assignment getIoAssignment_2_1() { return cIoAssignment_2_1; }

		//Input
		public RuleCall getIoInputParserRuleCall_2_1_0() { return cIoInputParserRuleCall_2_1_0; }

		//"source"
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }

		//source=[Component]
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }

		//[Component]
		public CrossReference getSourceComponentCrossReference_4_0() { return cSourceComponentCrossReference_4_0; }

		//ID
		public RuleCall getSourceComponentIDTerminalRuleCall_4_0_1() { return cSourceComponentIDTerminalRuleCall_4_0_1; }
	}

	public class DeviceOutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeviceOutput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOutputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cValueKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cIoAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cIoOutputParserRuleCall_2_1_0 = (RuleCall)cIoAssignment_2_1.eContents().get(0);
		private final Keyword cTargetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTargetComponentCrossReference_4_0 = (CrossReference)cTargetAssignment_4.eContents().get(0);
		private final RuleCall cTargetComponentIDTerminalRuleCall_4_0_1 = (RuleCall)cTargetComponentCrossReference_4_0.eContents().get(1);
		
		//DeviceOutput:
		//	"output" name=ID ("value" io=Output)? "target" target=[Component];
		public ParserRule getRule() { return rule; }

		//"output" name=ID ("value" io=Output)? "target" target=[Component]
		public Group getGroup() { return cGroup; }

		//"output"
		public Keyword getOutputKeyword_0() { return cOutputKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("value" io=Output)?
		public Group getGroup_2() { return cGroup_2; }

		//"value"
		public Keyword getValueKeyword_2_0() { return cValueKeyword_2_0; }

		//io=Output
		public Assignment getIoAssignment_2_1() { return cIoAssignment_2_1; }

		//Output
		public RuleCall getIoOutputParserRuleCall_2_1_0() { return cIoOutputParserRuleCall_2_1_0; }

		//"target"
		public Keyword getTargetKeyword_3() { return cTargetKeyword_3; }

		//target=[Component]
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }

		//[Component]
		public CrossReference getTargetComponentCrossReference_4_0() { return cTargetComponentCrossReference_4_0; }

		//ID
		public RuleCall getTargetComponentIDTerminalRuleCall_4_0_1() { return cTargetComponentIDTerminalRuleCall_4_0_1; }
	}

	public class ComponentInputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComponentInput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cValueKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cIoAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cIoInputParserRuleCall_2_1_0 = (RuleCall)cIoAssignment_2_1.eContents().get(0);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSourceDeviceCrossReference_4_0 = (CrossReference)cSourceAssignment_4.eContents().get(0);
		private final RuleCall cSourceDeviceIDTerminalRuleCall_4_0_1 = (RuleCall)cSourceDeviceCrossReference_4_0.eContents().get(1);
		
		//ComponentInput:
		//	"input" name=ID ("value" io=Input)? "source" source=[Device];
		public ParserRule getRule() { return rule; }

		//"input" name=ID ("value" io=Input)? "source" source=[Device]
		public Group getGroup() { return cGroup; }

		//"input"
		public Keyword getInputKeyword_0() { return cInputKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("value" io=Input)?
		public Group getGroup_2() { return cGroup_2; }

		//"value"
		public Keyword getValueKeyword_2_0() { return cValueKeyword_2_0; }

		//io=Input
		public Assignment getIoAssignment_2_1() { return cIoAssignment_2_1; }

		//Input
		public RuleCall getIoInputParserRuleCall_2_1_0() { return cIoInputParserRuleCall_2_1_0; }

		//"source"
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }

		//source=[Device]
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }

		//[Device]
		public CrossReference getSourceDeviceCrossReference_4_0() { return cSourceDeviceCrossReference_4_0; }

		//ID
		public RuleCall getSourceDeviceIDTerminalRuleCall_4_0_1() { return cSourceDeviceIDTerminalRuleCall_4_0_1; }
	}

	public class ComponentOutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComponentOutput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOutputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cValueKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cIoAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cIoOutputParserRuleCall_2_1_0 = (RuleCall)cIoAssignment_2_1.eContents().get(0);
		private final Keyword cTargetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTargetDeviceCrossReference_4_0 = (CrossReference)cTargetAssignment_4.eContents().get(0);
		private final RuleCall cTargetDeviceIDTerminalRuleCall_4_0_1 = (RuleCall)cTargetDeviceCrossReference_4_0.eContents().get(1);
		
		//ComponentOutput:
		//	"output" name=ID ("value" io=Output)? "target" target=[Device];
		public ParserRule getRule() { return rule; }

		//"output" name=ID ("value" io=Output)? "target" target=[Device]
		public Group getGroup() { return cGroup; }

		//"output"
		public Keyword getOutputKeyword_0() { return cOutputKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("value" io=Output)?
		public Group getGroup_2() { return cGroup_2; }

		//"value"
		public Keyword getValueKeyword_2_0() { return cValueKeyword_2_0; }

		//io=Output
		public Assignment getIoAssignment_2_1() { return cIoAssignment_2_1; }

		//Output
		public RuleCall getIoOutputParserRuleCall_2_1_0() { return cIoOutputParserRuleCall_2_1_0; }

		//"target"
		public Keyword getTargetKeyword_3() { return cTargetKeyword_3; }

		//target=[Device]
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }

		//[Device]
		public CrossReference getTargetDeviceCrossReference_4_0() { return cTargetDeviceCrossReference_4_0; }

		//ID
		public RuleCall getTargetDeviceIDTerminalRuleCall_4_0_1() { return cTargetDeviceIDTerminalRuleCall_4_0_1; }
	}

	public class BigUnitValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BigUnitValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValueBigDecimalTypeParserRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Keyword cUnitsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cUnitsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUnitsSTRINGTerminalRuleCall_2_0 = (RuleCall)cUnitsAssignment_2.eContents().get(0);
		
		//BigUnitValue:
		//	value=BigDecimalType "units" units=STRING;
		public ParserRule getRule() { return rule; }

		//value=BigDecimalType "units" units=STRING
		public Group getGroup() { return cGroup; }

		//value=BigDecimalType
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//BigDecimalType
		public RuleCall getValueBigDecimalTypeParserRuleCall_0_0() { return cValueBigDecimalTypeParserRuleCall_0_0; }

		//"units"
		public Keyword getUnitsKeyword_1() { return cUnitsKeyword_1; }

		//units=STRING
		public Assignment getUnitsAssignment_2() { return cUnitsAssignment_2; }

		//STRING
		public RuleCall getUnitsSTRINGTerminalRuleCall_2_0() { return cUnitsSTRINGTerminalRuleCall_2_0; }
	}

	public class StateValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValueAlternatives_0 = (Alternatives)cValueAssignment.eContents().get(0);
		private final Keyword cValueTKeyword_0_0 = (Keyword)cValueAlternatives_0.eContents().get(0);
		private final Keyword cValueFKeyword_0_1 = (Keyword)cValueAlternatives_0.eContents().get(1);
		private final Keyword cValueFullStopKeyword_0_2 = (Keyword)cValueAlternatives_0.eContents().get(2);
		private final Keyword cValueQuestionMarkKeyword_0_3 = (Keyword)cValueAlternatives_0.eContents().get(3);
		
		//StateValue:
		//	value=("T" | "F" | "." | "?");
		public ParserRule getRule() { return rule; }

		//value=("T" | "F" | "." | "?")
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"T" | "F" | "." | "?"
		public Alternatives getValueAlternatives_0() { return cValueAlternatives_0; }

		//"T"
		public Keyword getValueTKeyword_0_0() { return cValueTKeyword_0_0; }

		//"F"
		public Keyword getValueFKeyword_0_1() { return cValueFKeyword_0_1; }

		//"."
		public Keyword getValueFullStopKeyword_0_2() { return cValueFullStopKeyword_0_2; }

		//"?"
		public Keyword getValueQuestionMarkKeyword_0_3() { return cValueQuestionMarkKeyword_0_3; }
	}

	public class StateListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStateListAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStateListStateValueParserRuleCall_1_0 = (RuleCall)cStateListAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//StateList:
		//	"[" stateList+=StateValue+ "]";
		public ParserRule getRule() { return rule; }

		//"[" stateList+=StateValue+ "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//stateList+=StateValue+
		public Assignment getStateListAssignment_1() { return cStateListAssignment_1; }

		//StateValue
		public RuleCall getStateListStateValueParserRuleCall_1_0() { return cStateListStateValueParserRuleCall_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class TriggerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Trigger");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cModeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cModeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cModeModeCrossReference_0_1_0 = (CrossReference)cModeAssignment_0_1.eContents().get(0);
		private final RuleCall cModeModeIDTerminalRuleCall_0_1_0_1 = (RuleCall)cModeModeCrossReference_0_1_0.eContents().get(1);
		private final Assignment cListAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cListStateListParserRuleCall_0_2_0 = (RuleCall)cListAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cStateKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cVariableAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cVariableStateVariableCrossReference_1_1_0 = (CrossReference)cVariableAssignment_1_1.eContents().get(0);
		private final RuleCall cVariableStateVariableIDTerminalRuleCall_1_1_0_1 = (RuleCall)cVariableStateVariableCrossReference_1_1_0.eContents().get(1);
		private final Assignment cValueAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cValueStateCrossReference_1_2_0 = (CrossReference)cValueAssignment_1_2.eContents().get(0);
		private final RuleCall cValueStateIDTerminalRuleCall_1_2_0_1 = (RuleCall)cValueStateCrossReference_1_2_0.eContents().get(1);
		private final Assignment cListAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cListStateListParserRuleCall_1_3_0 = (RuleCall)cListAssignment_1_3.eContents().get(0);
		
		//Trigger:
		//	"mode" mode=[Mode] list=StateList | "state" variable=[StateVariable] value=[State] list=StateList;
		public ParserRule getRule() { return rule; }

		//"mode" mode=[Mode] list=StateList | "state" variable=[StateVariable] value=[State] list=StateList
		public Alternatives getAlternatives() { return cAlternatives; }

		//"mode" mode=[Mode] list=StateList
		public Group getGroup_0() { return cGroup_0; }

		//"mode"
		public Keyword getModeKeyword_0_0() { return cModeKeyword_0_0; }

		//mode=[Mode]
		public Assignment getModeAssignment_0_1() { return cModeAssignment_0_1; }

		//[Mode]
		public CrossReference getModeModeCrossReference_0_1_0() { return cModeModeCrossReference_0_1_0; }

		//ID
		public RuleCall getModeModeIDTerminalRuleCall_0_1_0_1() { return cModeModeIDTerminalRuleCall_0_1_0_1; }

		//list=StateList
		public Assignment getListAssignment_0_2() { return cListAssignment_0_2; }

		//StateList
		public RuleCall getListStateListParserRuleCall_0_2_0() { return cListStateListParserRuleCall_0_2_0; }

		//"state" variable=[StateVariable] value=[State] list=StateList
		public Group getGroup_1() { return cGroup_1; }

		//"state"
		public Keyword getStateKeyword_1_0() { return cStateKeyword_1_0; }

		//variable=[StateVariable]
		public Assignment getVariableAssignment_1_1() { return cVariableAssignment_1_1; }

		//[StateVariable]
		public CrossReference getVariableStateVariableCrossReference_1_1_0() { return cVariableStateVariableCrossReference_1_1_0; }

		//ID
		public RuleCall getVariableStateVariableIDTerminalRuleCall_1_1_0_1() { return cVariableStateVariableIDTerminalRuleCall_1_1_0_1; }

		//value=[State]
		public Assignment getValueAssignment_1_2() { return cValueAssignment_1_2; }

		//[State]
		public CrossReference getValueStateCrossReference_1_2_0() { return cValueStateCrossReference_1_2_0; }

		//ID
		public RuleCall getValueStateIDTerminalRuleCall_1_2_0_1() { return cValueStateIDTerminalRuleCall_1_2_0_1; }

		//list=StateList
		public Assignment getListAssignment_1_3() { return cListAssignment_1_3; }

		//StateList
		public RuleCall getListStateListParserRuleCall_1_3_0() { return cListStateListParserRuleCall_1_3_0; }
	}

	public class TriggerTableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TriggerTable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTriggerTableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRowsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRowsTriggerParserRuleCall_2_0 = (RuleCall)cRowsAssignment_2.eContents().get(0);
		
		//TriggerTable:
		//	{TriggerTable} "table" rows+=Trigger*;
		public ParserRule getRule() { return rule; }

		//{TriggerTable} "table" rows+=Trigger*
		public Group getGroup() { return cGroup; }

		//{TriggerTable}
		public Action getTriggerTableAction_0() { return cTriggerTableAction_0; }

		//"table"
		public Keyword getTableKeyword_1() { return cTableKeyword_1; }

		//rows+=Trigger*
		public Assignment getRowsAssignment_2() { return cRowsAssignment_2; }

		//Trigger
		public RuleCall getRowsTriggerParserRuleCall_2_0() { return cRowsTriggerParserRuleCall_2_0; }
	}

	public class ValueRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLowerAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLowerBigDecimalTypeParserRuleCall_1_0 = (RuleCall)cLowerAssignment_1.eContents().get(0);
		private final Keyword cFullStopFullStopFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUpperAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUpperBigDecimalTypeParserRuleCall_3_0 = (RuleCall)cUpperAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRangeTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRangeTypeSTRINGTerminalRuleCall_6_0 = (RuleCall)cRangeTypeAssignment_6.eContents().get(0);
		private final Keyword cUnitsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cRangeUnitsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cRangeUnitsSTRINGTerminalRuleCall_8_0 = (RuleCall)cRangeUnitsAssignment_8.eContents().get(0);
		
		//ValueRange:
		//	"{" lower=BigDecimalType "..." upper=BigDecimalType "}" "type" rangeType=STRING "units" rangeUnits=STRING;
		public ParserRule getRule() { return rule; }

		//"{" lower=BigDecimalType "..." upper=BigDecimalType "}" "type" rangeType=STRING "units" rangeUnits=STRING
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//lower=BigDecimalType
		public Assignment getLowerAssignment_1() { return cLowerAssignment_1; }

		//BigDecimalType
		public RuleCall getLowerBigDecimalTypeParserRuleCall_1_0() { return cLowerBigDecimalTypeParserRuleCall_1_0; }

		//"..."
		public Keyword getFullStopFullStopFullStopKeyword_2() { return cFullStopFullStopFullStopKeyword_2; }

		//upper=BigDecimalType
		public Assignment getUpperAssignment_3() { return cUpperAssignment_3; }

		//BigDecimalType
		public RuleCall getUpperBigDecimalTypeParserRuleCall_3_0() { return cUpperBigDecimalTypeParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//"type"
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }

		//rangeType=STRING
		public Assignment getRangeTypeAssignment_6() { return cRangeTypeAssignment_6; }

		//STRING
		public RuleCall getRangeTypeSTRINGTerminalRuleCall_6_0() { return cRangeTypeSTRINGTerminalRuleCall_6_0; }

		//"units"
		public Keyword getUnitsKeyword_7() { return cUnitsKeyword_7; }

		//rangeUnits=STRING
		public Assignment getRangeUnitsAssignment_8() { return cRangeUnitsAssignment_8; }

		//STRING
		public RuleCall getRangeUnitsSTRINGTerminalRuleCall_8_0() { return cRangeUnitsSTRINGTerminalRuleCall_8_0; }
	}

	public class ValueListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValuesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValuesSTRINGTerminalRuleCall_1_0 = (RuleCall)cValuesAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ValueList:
		//	"{" values+=STRING+ "}";
		public ParserRule getRule() { return rule; }

		//"{" values+=STRING+ "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//values+=STRING+
		public Assignment getValuesAssignment_1() { return cValuesAssignment_1; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_1_0() { return cValuesSTRINGTerminalRuleCall_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class OutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Output");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOutputAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cRangeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRangeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRangeValueRangeParserRuleCall_1_1_0 = (RuleCall)cRangeAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cValueListKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValueListAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValueListValueListParserRuleCall_2_1_0 = (RuleCall)cValueListAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRateAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRateBigUnitValueParserRuleCall_3_1_0 = (RuleCall)cRateAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInitiationDelayKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDelayAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDelayBigUnitValueParserRuleCall_4_1_0 = (RuleCall)cDelayAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCompletionDeadlineKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDeadlineAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDeadlineBigUnitValueParserRuleCall_5_1_0 = (RuleCall)cDeadlineAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCompletionExceptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCompletionHandlingAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cCompletionHandlingSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cCompletionHandlingAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cVariablesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cVariablesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cVariablesSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cVariablesAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cRelationshipKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cRelationshipAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cRelationshipSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cRelationshipAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cMinResponseTimeKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cMinResponseAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cMinResponseBigUnitValueParserRuleCall_9_1_0 = (RuleCall)cMinResponseAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cMaxResponseTimeKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cMaxResponseAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cMaxResponseBigUnitValueParserRuleCall_10_1_0 = (RuleCall)cMaxResponseAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cFeedbackExceptionKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cFeebackHandlingAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cFeebackHandlingSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cFeebackHandlingAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cReversedByKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cReversedAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cReversedSTRINGTerminalRuleCall_12_1_0 = (RuleCall)cReversedAssignment_12_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cReferencesKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cReferencesAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cReferencesSTRINGTerminalRuleCall_13_1_0 = (RuleCall)cReferencesAssignment_13_1.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cCommentsKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cCommentsAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cCommentsSTRINGTerminalRuleCall_14_1_0 = (RuleCall)cCommentsAssignment_14_1.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cContentsKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cContentsAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cContentsSTRINGTerminalRuleCall_15_1_0 = (RuleCall)cContentsAssignment_15_1.eContents().get(0);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cTriggeringKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cTableAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cTableTriggerTableParserRuleCall_16_1_0 = (RuleCall)cTableAssignment_16_1.eContents().get(0);
		
		//Output:
		//	{Output} ("range" range=ValueRange)? ("value-list" valueList=ValueList)? ("rate" rate=BigUnitValue)?
		//	("initiation-delay" delay=BigUnitValue)? ("completion-deadline" deadline=BigUnitValue)? ("completion-exception"
		//	completionHandling=STRING)? ("variables" variables=STRING)? ("relationship" relationship=STRING)? ("min-response-time"
		//	minResponse=BigUnitValue)? ("max-response-time" maxResponse=BigUnitValue)? ("feedback-exception"
		//	feebackHandling=STRING)? ("reversed-by" reversed=STRING)? ("references" references=STRING)? ("comments"
		//	comments=STRING)? ("contents" contents=STRING)? ("triggering" table=TriggerTable)?;
		public ParserRule getRule() { return rule; }

		//{Output} ("range" range=ValueRange)? ("value-list" valueList=ValueList)? ("rate" rate=BigUnitValue)? ("initiation-delay"
		//delay=BigUnitValue)? ("completion-deadline" deadline=BigUnitValue)? ("completion-exception" completionHandling=STRING)?
		//("variables" variables=STRING)? ("relationship" relationship=STRING)? ("min-response-time" minResponse=BigUnitValue)?
		//("max-response-time" maxResponse=BigUnitValue)? ("feedback-exception" feebackHandling=STRING)? ("reversed-by"
		//reversed=STRING)? ("references" references=STRING)? ("comments" comments=STRING)? ("contents" contents=STRING)?
		//("triggering" table=TriggerTable)?
		public Group getGroup() { return cGroup; }

		//{Output}
		public Action getOutputAction_0() { return cOutputAction_0; }

		//("range" range=ValueRange)?
		public Group getGroup_1() { return cGroup_1; }

		//"range"
		public Keyword getRangeKeyword_1_0() { return cRangeKeyword_1_0; }

		//range=ValueRange
		public Assignment getRangeAssignment_1_1() { return cRangeAssignment_1_1; }

		//ValueRange
		public RuleCall getRangeValueRangeParserRuleCall_1_1_0() { return cRangeValueRangeParserRuleCall_1_1_0; }

		//("value-list" valueList=ValueList)?
		public Group getGroup_2() { return cGroup_2; }

		//"value-list"
		public Keyword getValueListKeyword_2_0() { return cValueListKeyword_2_0; }

		//valueList=ValueList
		public Assignment getValueListAssignment_2_1() { return cValueListAssignment_2_1; }

		//ValueList
		public RuleCall getValueListValueListParserRuleCall_2_1_0() { return cValueListValueListParserRuleCall_2_1_0; }

		//("rate" rate=BigUnitValue)?
		public Group getGroup_3() { return cGroup_3; }

		//"rate"
		public Keyword getRateKeyword_3_0() { return cRateKeyword_3_0; }

		//rate=BigUnitValue
		public Assignment getRateAssignment_3_1() { return cRateAssignment_3_1; }

		//BigUnitValue
		public RuleCall getRateBigUnitValueParserRuleCall_3_1_0() { return cRateBigUnitValueParserRuleCall_3_1_0; }

		//("initiation-delay" delay=BigUnitValue)?
		public Group getGroup_4() { return cGroup_4; }

		//"initiation-delay"
		public Keyword getInitiationDelayKeyword_4_0() { return cInitiationDelayKeyword_4_0; }

		//delay=BigUnitValue
		public Assignment getDelayAssignment_4_1() { return cDelayAssignment_4_1; }

		//BigUnitValue
		public RuleCall getDelayBigUnitValueParserRuleCall_4_1_0() { return cDelayBigUnitValueParserRuleCall_4_1_0; }

		//("completion-deadline" deadline=BigUnitValue)?
		public Group getGroup_5() { return cGroup_5; }

		//"completion-deadline"
		public Keyword getCompletionDeadlineKeyword_5_0() { return cCompletionDeadlineKeyword_5_0; }

		//deadline=BigUnitValue
		public Assignment getDeadlineAssignment_5_1() { return cDeadlineAssignment_5_1; }

		//BigUnitValue
		public RuleCall getDeadlineBigUnitValueParserRuleCall_5_1_0() { return cDeadlineBigUnitValueParserRuleCall_5_1_0; }

		//("completion-exception" completionHandling=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//"completion-exception"
		public Keyword getCompletionExceptionKeyword_6_0() { return cCompletionExceptionKeyword_6_0; }

		//completionHandling=STRING
		public Assignment getCompletionHandlingAssignment_6_1() { return cCompletionHandlingAssignment_6_1; }

		//STRING
		public RuleCall getCompletionHandlingSTRINGTerminalRuleCall_6_1_0() { return cCompletionHandlingSTRINGTerminalRuleCall_6_1_0; }

		//("variables" variables=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//"variables"
		public Keyword getVariablesKeyword_7_0() { return cVariablesKeyword_7_0; }

		//variables=STRING
		public Assignment getVariablesAssignment_7_1() { return cVariablesAssignment_7_1; }

		//STRING
		public RuleCall getVariablesSTRINGTerminalRuleCall_7_1_0() { return cVariablesSTRINGTerminalRuleCall_7_1_0; }

		//("relationship" relationship=STRING)?
		public Group getGroup_8() { return cGroup_8; }

		//"relationship"
		public Keyword getRelationshipKeyword_8_0() { return cRelationshipKeyword_8_0; }

		//relationship=STRING
		public Assignment getRelationshipAssignment_8_1() { return cRelationshipAssignment_8_1; }

		//STRING
		public RuleCall getRelationshipSTRINGTerminalRuleCall_8_1_0() { return cRelationshipSTRINGTerminalRuleCall_8_1_0; }

		//("min-response-time" minResponse=BigUnitValue)?
		public Group getGroup_9() { return cGroup_9; }

		//"min-response-time"
		public Keyword getMinResponseTimeKeyword_9_0() { return cMinResponseTimeKeyword_9_0; }

		//minResponse=BigUnitValue
		public Assignment getMinResponseAssignment_9_1() { return cMinResponseAssignment_9_1; }

		//BigUnitValue
		public RuleCall getMinResponseBigUnitValueParserRuleCall_9_1_0() { return cMinResponseBigUnitValueParserRuleCall_9_1_0; }

		//("max-response-time" maxResponse=BigUnitValue)?
		public Group getGroup_10() { return cGroup_10; }

		//"max-response-time"
		public Keyword getMaxResponseTimeKeyword_10_0() { return cMaxResponseTimeKeyword_10_0; }

		//maxResponse=BigUnitValue
		public Assignment getMaxResponseAssignment_10_1() { return cMaxResponseAssignment_10_1; }

		//BigUnitValue
		public RuleCall getMaxResponseBigUnitValueParserRuleCall_10_1_0() { return cMaxResponseBigUnitValueParserRuleCall_10_1_0; }

		//("feedback-exception" feebackHandling=STRING)?
		public Group getGroup_11() { return cGroup_11; }

		//"feedback-exception"
		public Keyword getFeedbackExceptionKeyword_11_0() { return cFeedbackExceptionKeyword_11_0; }

		//feebackHandling=STRING
		public Assignment getFeebackHandlingAssignment_11_1() { return cFeebackHandlingAssignment_11_1; }

		//STRING
		public RuleCall getFeebackHandlingSTRINGTerminalRuleCall_11_1_0() { return cFeebackHandlingSTRINGTerminalRuleCall_11_1_0; }

		//("reversed-by" reversed=STRING)?
		public Group getGroup_12() { return cGroup_12; }

		//"reversed-by"
		public Keyword getReversedByKeyword_12_0() { return cReversedByKeyword_12_0; }

		//reversed=STRING
		public Assignment getReversedAssignment_12_1() { return cReversedAssignment_12_1; }

		//STRING
		public RuleCall getReversedSTRINGTerminalRuleCall_12_1_0() { return cReversedSTRINGTerminalRuleCall_12_1_0; }

		//("references" references=STRING)?
		public Group getGroup_13() { return cGroup_13; }

		//"references"
		public Keyword getReferencesKeyword_13_0() { return cReferencesKeyword_13_0; }

		//references=STRING
		public Assignment getReferencesAssignment_13_1() { return cReferencesAssignment_13_1; }

		//STRING
		public RuleCall getReferencesSTRINGTerminalRuleCall_13_1_0() { return cReferencesSTRINGTerminalRuleCall_13_1_0; }

		//("comments" comments=STRING)?
		public Group getGroup_14() { return cGroup_14; }

		//"comments"
		public Keyword getCommentsKeyword_14_0() { return cCommentsKeyword_14_0; }

		//comments=STRING
		public Assignment getCommentsAssignment_14_1() { return cCommentsAssignment_14_1; }

		//STRING
		public RuleCall getCommentsSTRINGTerminalRuleCall_14_1_0() { return cCommentsSTRINGTerminalRuleCall_14_1_0; }

		//("contents" contents=STRING)?
		public Group getGroup_15() { return cGroup_15; }

		//"contents"
		public Keyword getContentsKeyword_15_0() { return cContentsKeyword_15_0; }

		//contents=STRING
		public Assignment getContentsAssignment_15_1() { return cContentsAssignment_15_1; }

		//STRING
		public RuleCall getContentsSTRINGTerminalRuleCall_15_1_0() { return cContentsSTRINGTerminalRuleCall_15_1_0; }

		//("triggering" table=TriggerTable)?
		public Group getGroup_16() { return cGroup_16; }

		//"triggering"
		public Keyword getTriggeringKeyword_16_0() { return cTriggeringKeyword_16_0; }

		//table=TriggerTable
		public Assignment getTableAssignment_16_1() { return cTableAssignment_16_1; }

		//TriggerTable
		public RuleCall getTableTriggerTableParserRuleCall_16_1_0() { return cTableTriggerTableParserRuleCall_16_1_0; }
	}

	public class InputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Input");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInputAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cRangeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRangeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRangeValueRangeParserRuleCall_1_1_0 = (RuleCall)cRangeAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cValueListKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValueListAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValueListValueListParserRuleCall_2_1_0 = (RuleCall)cValueListAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueExceptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueHandlingAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueHandlingSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cValueHandlingAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cGranularityKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGranularityAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGranularityBigUnitValueParserRuleCall_4_1_0 = (RuleCall)cGranularityAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cArrivalRateAvgKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cArrivalRateAvgAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cArrivalRateAvgBigUnitValueParserRuleCall_5_1_0 = (RuleCall)cArrivalRateAvgAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cArrivalRateMinimumKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cArrivalRateMinimumAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cArrivalRateMinimumBigUnitValueParserRuleCall_6_1_0 = (RuleCall)cArrivalRateMinimumAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cArrivalRateMaximumKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cArrivalRateMaximumAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cArrivalRateMaximumBigUnitValueParserRuleCall_7_1_0 = (RuleCall)cArrivalRateMaximumAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cObsolescenceKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cObsolescenceAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cObsolescenceBigUnitValueParserRuleCall_8_1_0 = (RuleCall)cObsolescenceAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cReferencesKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cReferencesAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cReferencesSTRINGTerminalRuleCall_9_1_0 = (RuleCall)cReferencesAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cAppearsInKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cAppearsInAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cAppearsInSTRINGTerminalRuleCall_10_1_0 = (RuleCall)cAppearsInAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cDescriptionKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cDescriptionAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cDescriptionAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cCommentsKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cCommentsAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cCommentsSTRINGTerminalRuleCall_12_1_0 = (RuleCall)cCommentsAssignment_12_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cTriggeringKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cStructureAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cStructureTriggerTableParserRuleCall_13_1_0 = (RuleCall)cStructureAssignment_13_1.eContents().get(0);
		
		//Input:
		//	{Input} ("range" range=ValueRange)? ("value-list" valueList=ValueList)? ("value-exception" valueHandling=STRING)?
		//	("granularity" granularity=BigUnitValue)? ("arrival-rate-avg" arrivalRateAvg=BigUnitValue)? ("arrival-rate-minimum"
		//	arrivalRateMinimum=BigUnitValue)? ("arrival-rate-maximum" arrivalRateMaximum=BigUnitValue)? ("obsolescence"
		//	obsolescence=BigUnitValue)? ("references" references=STRING)? ("appears-in" appearsIn=STRING)? ("description"
		//	description=STRING)? ("comments" comments=STRING)? ("triggering" structure=TriggerTable)?;
		public ParserRule getRule() { return rule; }

		//{Input} ("range" range=ValueRange)? ("value-list" valueList=ValueList)? ("value-exception" valueHandling=STRING)?
		//("granularity" granularity=BigUnitValue)? ("arrival-rate-avg" arrivalRateAvg=BigUnitValue)? ("arrival-rate-minimum"
		//arrivalRateMinimum=BigUnitValue)? ("arrival-rate-maximum" arrivalRateMaximum=BigUnitValue)? ("obsolescence"
		//obsolescence=BigUnitValue)? ("references" references=STRING)? ("appears-in" appearsIn=STRING)? ("description"
		//description=STRING)? ("comments" comments=STRING)? ("triggering" structure=TriggerTable)?
		public Group getGroup() { return cGroup; }

		//{Input}
		public Action getInputAction_0() { return cInputAction_0; }

		//("range" range=ValueRange)?
		public Group getGroup_1() { return cGroup_1; }

		//"range"
		public Keyword getRangeKeyword_1_0() { return cRangeKeyword_1_0; }

		//range=ValueRange
		public Assignment getRangeAssignment_1_1() { return cRangeAssignment_1_1; }

		//ValueRange
		public RuleCall getRangeValueRangeParserRuleCall_1_1_0() { return cRangeValueRangeParserRuleCall_1_1_0; }

		//("value-list" valueList=ValueList)?
		public Group getGroup_2() { return cGroup_2; }

		//"value-list"
		public Keyword getValueListKeyword_2_0() { return cValueListKeyword_2_0; }

		//valueList=ValueList
		public Assignment getValueListAssignment_2_1() { return cValueListAssignment_2_1; }

		//ValueList
		public RuleCall getValueListValueListParserRuleCall_2_1_0() { return cValueListValueListParserRuleCall_2_1_0; }

		//("value-exception" valueHandling=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"value-exception"
		public Keyword getValueExceptionKeyword_3_0() { return cValueExceptionKeyword_3_0; }

		//valueHandling=STRING
		public Assignment getValueHandlingAssignment_3_1() { return cValueHandlingAssignment_3_1; }

		//STRING
		public RuleCall getValueHandlingSTRINGTerminalRuleCall_3_1_0() { return cValueHandlingSTRINGTerminalRuleCall_3_1_0; }

		//("granularity" granularity=BigUnitValue)?
		public Group getGroup_4() { return cGroup_4; }

		//"granularity"
		public Keyword getGranularityKeyword_4_0() { return cGranularityKeyword_4_0; }

		//granularity=BigUnitValue
		public Assignment getGranularityAssignment_4_1() { return cGranularityAssignment_4_1; }

		//BigUnitValue
		public RuleCall getGranularityBigUnitValueParserRuleCall_4_1_0() { return cGranularityBigUnitValueParserRuleCall_4_1_0; }

		//("arrival-rate-avg" arrivalRateAvg=BigUnitValue)?
		public Group getGroup_5() { return cGroup_5; }

		//"arrival-rate-avg"
		public Keyword getArrivalRateAvgKeyword_5_0() { return cArrivalRateAvgKeyword_5_0; }

		//arrivalRateAvg=BigUnitValue
		public Assignment getArrivalRateAvgAssignment_5_1() { return cArrivalRateAvgAssignment_5_1; }

		//BigUnitValue
		public RuleCall getArrivalRateAvgBigUnitValueParserRuleCall_5_1_0() { return cArrivalRateAvgBigUnitValueParserRuleCall_5_1_0; }

		//("arrival-rate-minimum" arrivalRateMinimum=BigUnitValue)?
		public Group getGroup_6() { return cGroup_6; }

		//"arrival-rate-minimum"
		public Keyword getArrivalRateMinimumKeyword_6_0() { return cArrivalRateMinimumKeyword_6_0; }

		//arrivalRateMinimum=BigUnitValue
		public Assignment getArrivalRateMinimumAssignment_6_1() { return cArrivalRateMinimumAssignment_6_1; }

		//BigUnitValue
		public RuleCall getArrivalRateMinimumBigUnitValueParserRuleCall_6_1_0() { return cArrivalRateMinimumBigUnitValueParserRuleCall_6_1_0; }

		//("arrival-rate-maximum" arrivalRateMaximum=BigUnitValue)?
		public Group getGroup_7() { return cGroup_7; }

		//"arrival-rate-maximum"
		public Keyword getArrivalRateMaximumKeyword_7_0() { return cArrivalRateMaximumKeyword_7_0; }

		//arrivalRateMaximum=BigUnitValue
		public Assignment getArrivalRateMaximumAssignment_7_1() { return cArrivalRateMaximumAssignment_7_1; }

		//BigUnitValue
		public RuleCall getArrivalRateMaximumBigUnitValueParserRuleCall_7_1_0() { return cArrivalRateMaximumBigUnitValueParserRuleCall_7_1_0; }

		//("obsolescence" obsolescence=BigUnitValue)?
		public Group getGroup_8() { return cGroup_8; }

		//"obsolescence"
		public Keyword getObsolescenceKeyword_8_0() { return cObsolescenceKeyword_8_0; }

		//obsolescence=BigUnitValue
		public Assignment getObsolescenceAssignment_8_1() { return cObsolescenceAssignment_8_1; }

		//BigUnitValue
		public RuleCall getObsolescenceBigUnitValueParserRuleCall_8_1_0() { return cObsolescenceBigUnitValueParserRuleCall_8_1_0; }

		//("references" references=STRING)?
		public Group getGroup_9() { return cGroup_9; }

		//"references"
		public Keyword getReferencesKeyword_9_0() { return cReferencesKeyword_9_0; }

		//references=STRING
		public Assignment getReferencesAssignment_9_1() { return cReferencesAssignment_9_1; }

		//STRING
		public RuleCall getReferencesSTRINGTerminalRuleCall_9_1_0() { return cReferencesSTRINGTerminalRuleCall_9_1_0; }

		//("appears-in" appearsIn=STRING)?
		public Group getGroup_10() { return cGroup_10; }

		//"appears-in"
		public Keyword getAppearsInKeyword_10_0() { return cAppearsInKeyword_10_0; }

		//appearsIn=STRING
		public Assignment getAppearsInAssignment_10_1() { return cAppearsInAssignment_10_1; }

		//STRING
		public RuleCall getAppearsInSTRINGTerminalRuleCall_10_1_0() { return cAppearsInSTRINGTerminalRuleCall_10_1_0; }

		//("description" description=STRING)?
		public Group getGroup_11() { return cGroup_11; }

		//"description"
		public Keyword getDescriptionKeyword_11_0() { return cDescriptionKeyword_11_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_11_1() { return cDescriptionAssignment_11_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_11_1_0() { return cDescriptionSTRINGTerminalRuleCall_11_1_0; }

		//("comments" comments=STRING)?
		public Group getGroup_12() { return cGroup_12; }

		//"comments"
		public Keyword getCommentsKeyword_12_0() { return cCommentsKeyword_12_0; }

		//comments=STRING
		public Assignment getCommentsAssignment_12_1() { return cCommentsAssignment_12_1; }

		//STRING
		public RuleCall getCommentsSTRINGTerminalRuleCall_12_1_0() { return cCommentsSTRINGTerminalRuleCall_12_1_0; }

		//("triggering" structure=TriggerTable)?
		public Group getGroup_13() { return cGroup_13; }

		//"triggering"
		public Keyword getTriggeringKeyword_13_0() { return cTriggeringKeyword_13_0; }

		//structure=TriggerTable
		public Assignment getStructureAssignment_13_1() { return cStructureAssignment_13_1; }

		//TriggerTable
		public RuleCall getStructureTriggerTableParserRuleCall_13_1_0() { return cStructureTriggerTableParserRuleCall_13_1_0; }
	}
	
	
	private SpecificationElements pSpecification;
	private BigDecimalTypeElements pBigDecimalType;
	private ModeElementTypeElements pModeElementType;
	private ComponentElements pComponent;
	private ModeElementElements pModeElement;
	private StateElementElements pStateElement;
	private StateVariableElements pStateVariable;
	private StateElements pState;
	private ModeVariableElements pModeVariable;
	private ModeElements pMode;
	private DeviceElements pDevice;
	private DeviceInputElements pDeviceInput;
	private DeviceOutputElements pDeviceOutput;
	private ComponentInputElements pComponentInput;
	private ComponentOutputElements pComponentOutput;
	private BigUnitValueElements pBigUnitValue;
	private StateValueElements pStateValue;
	private StateListElements pStateList;
	private TriggerElements pTrigger;
	private TriggerTableElements pTriggerTable;
	private ValueRangeElements pValueRange;
	private ValueListElements pValueList;
	private OutputElements pOutput;
	private InputElements pInput;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public StateSpecificationGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("net.certware.intent.state.StateSpecification".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	/// *
	// * A state specification consists of one or more components.
	// * / Specification:
	//	"specification" name=ID ("[" "devices" devices+=Device* "]")? components+=Component+;
	public SpecificationElements getSpecificationAccess() {
		return (pSpecification != null) ? pSpecification : (pSpecification = new SpecificationElements());
	}
	
	public ParserRule getSpecificationRule() {
		return getSpecificationAccess().getRule();
	}

	//BigDecimalType returns ecore::EBigDecimal:
	//	"-"? INT ("." INT)?;
	public BigDecimalTypeElements getBigDecimalTypeAccess() {
		return (pBigDecimalType != null) ? pBigDecimalType : (pBigDecimalType = new BigDecimalTypeElements());
	}
	
	public ParserRule getBigDecimalTypeRule() {
		return getBigDecimalTypeAccess().getRule();
	}

	//ModeElementType:
	//	elementType=("supervisory" | "operating" | "other");
	public ModeElementTypeElements getModeElementTypeAccess() {
		return (pModeElementType != null) ? pModeElementType : (pModeElementType = new ModeElementTypeElements());
	}
	
	public ParserRule getModeElementTypeRule() {
		return getModeElementTypeAccess().getRule();
	}

	//Component:
	//	"component" name=ID ("modes" modes+=ModeElement*)? ("states" states+=StateElement*)? ("inputs"
	//	inputs+=ComponentInput*)? ("outputs" outputs+=ComponentOutput*)?;
	public ComponentElements getComponentAccess() {
		return (pComponent != null) ? pComponent : (pComponent = new ComponentElements());
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}

	//ModeElement:
	//	inferred?="inferred"? type=ModeElementType modes+=ModeVariable+ ";";
	public ModeElementElements getModeElementAccess() {
		return (pModeElement != null) ? pModeElement : (pModeElement = new ModeElementElements());
	}
	
	public ParserRule getModeElementRule() {
		return getModeElementAccess().getRule();
	}

	//StateElement:
	//	inferred?="inferred"? states+=StateVariable+ ";";
	public StateElementElements getStateElementAccess() {
		return (pStateElement != null) ? pStateElement : (pStateElement = new StateElementElements());
	}
	
	public ParserRule getStateElementRule() {
		return getStateElementAccess().getRule();
	}

	//StateVariable:
	//	"state" desc=STRING "{" state+=State+ "}";
	public StateVariableElements getStateVariableAccess() {
		return (pStateVariable != null) ? pStateVariable : (pStateVariable = new StateVariableElements());
	}
	
	public ParserRule getStateVariableRule() {
		return getStateVariableAccess().getRule();
	}

	//State:
	//	initial?="initial"? value=STRING;
	public StateElements getStateAccess() {
		return (pState != null) ? pState : (pState = new StateElements());
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//ModeVariable:
	//	"mode" desc=STRING "{" modes+=Mode+ "}";
	public ModeVariableElements getModeVariableAccess() {
		return (pModeVariable != null) ? pModeVariable : (pModeVariable = new ModeVariableElements());
	}
	
	public ParserRule getModeVariableRule() {
		return getModeVariableAccess().getRule();
	}

	//Mode:
	//	initial?="initial"? value=STRING;
	public ModeElements getModeAccess() {
		return (pMode != null) ? pMode : (pMode = new ModeElements());
	}
	
	public ParserRule getModeRule() {
		return getModeAccess().getRule();
	}

	//Device:
	//	"device" name=ID desc=STRING ("inputs" inputs+=DeviceInput*)? ("outputs" outputs+=DeviceOutput*)?;
	public DeviceElements getDeviceAccess() {
		return (pDevice != null) ? pDevice : (pDevice = new DeviceElements());
	}
	
	public ParserRule getDeviceRule() {
		return getDeviceAccess().getRule();
	}

	//DeviceInput:
	//	"input" name=ID ("value" io=Input)? "source" source=[Component];
	public DeviceInputElements getDeviceInputAccess() {
		return (pDeviceInput != null) ? pDeviceInput : (pDeviceInput = new DeviceInputElements());
	}
	
	public ParserRule getDeviceInputRule() {
		return getDeviceInputAccess().getRule();
	}

	//DeviceOutput:
	//	"output" name=ID ("value" io=Output)? "target" target=[Component];
	public DeviceOutputElements getDeviceOutputAccess() {
		return (pDeviceOutput != null) ? pDeviceOutput : (pDeviceOutput = new DeviceOutputElements());
	}
	
	public ParserRule getDeviceOutputRule() {
		return getDeviceOutputAccess().getRule();
	}

	//ComponentInput:
	//	"input" name=ID ("value" io=Input)? "source" source=[Device];
	public ComponentInputElements getComponentInputAccess() {
		return (pComponentInput != null) ? pComponentInput : (pComponentInput = new ComponentInputElements());
	}
	
	public ParserRule getComponentInputRule() {
		return getComponentInputAccess().getRule();
	}

	//ComponentOutput:
	//	"output" name=ID ("value" io=Output)? "target" target=[Device];
	public ComponentOutputElements getComponentOutputAccess() {
		return (pComponentOutput != null) ? pComponentOutput : (pComponentOutput = new ComponentOutputElements());
	}
	
	public ParserRule getComponentOutputRule() {
		return getComponentOutputAccess().getRule();
	}

	//BigUnitValue:
	//	value=BigDecimalType "units" units=STRING;
	public BigUnitValueElements getBigUnitValueAccess() {
		return (pBigUnitValue != null) ? pBigUnitValue : (pBigUnitValue = new BigUnitValueElements());
	}
	
	public ParserRule getBigUnitValueRule() {
		return getBigUnitValueAccess().getRule();
	}

	//StateValue:
	//	value=("T" | "F" | "." | "?");
	public StateValueElements getStateValueAccess() {
		return (pStateValue != null) ? pStateValue : (pStateValue = new StateValueElements());
	}
	
	public ParserRule getStateValueRule() {
		return getStateValueAccess().getRule();
	}

	//StateList:
	//	"[" stateList+=StateValue+ "]";
	public StateListElements getStateListAccess() {
		return (pStateList != null) ? pStateList : (pStateList = new StateListElements());
	}
	
	public ParserRule getStateListRule() {
		return getStateListAccess().getRule();
	}

	//Trigger:
	//	"mode" mode=[Mode] list=StateList | "state" variable=[StateVariable] value=[State] list=StateList;
	public TriggerElements getTriggerAccess() {
		return (pTrigger != null) ? pTrigger : (pTrigger = new TriggerElements());
	}
	
	public ParserRule getTriggerRule() {
		return getTriggerAccess().getRule();
	}

	//TriggerTable:
	//	{TriggerTable} "table" rows+=Trigger*;
	public TriggerTableElements getTriggerTableAccess() {
		return (pTriggerTable != null) ? pTriggerTable : (pTriggerTable = new TriggerTableElements());
	}
	
	public ParserRule getTriggerTableRule() {
		return getTriggerTableAccess().getRule();
	}

	//ValueRange:
	//	"{" lower=BigDecimalType "..." upper=BigDecimalType "}" "type" rangeType=STRING "units" rangeUnits=STRING;
	public ValueRangeElements getValueRangeAccess() {
		return (pValueRange != null) ? pValueRange : (pValueRange = new ValueRangeElements());
	}
	
	public ParserRule getValueRangeRule() {
		return getValueRangeAccess().getRule();
	}

	//ValueList:
	//	"{" values+=STRING+ "}";
	public ValueListElements getValueListAccess() {
		return (pValueList != null) ? pValueList : (pValueList = new ValueListElements());
	}
	
	public ParserRule getValueListRule() {
		return getValueListAccess().getRule();
	}

	//Output:
	//	{Output} ("range" range=ValueRange)? ("value-list" valueList=ValueList)? ("rate" rate=BigUnitValue)?
	//	("initiation-delay" delay=BigUnitValue)? ("completion-deadline" deadline=BigUnitValue)? ("completion-exception"
	//	completionHandling=STRING)? ("variables" variables=STRING)? ("relationship" relationship=STRING)? ("min-response-time"
	//	minResponse=BigUnitValue)? ("max-response-time" maxResponse=BigUnitValue)? ("feedback-exception"
	//	feebackHandling=STRING)? ("reversed-by" reversed=STRING)? ("references" references=STRING)? ("comments"
	//	comments=STRING)? ("contents" contents=STRING)? ("triggering" table=TriggerTable)?;
	public OutputElements getOutputAccess() {
		return (pOutput != null) ? pOutput : (pOutput = new OutputElements());
	}
	
	public ParserRule getOutputRule() {
		return getOutputAccess().getRule();
	}

	//Input:
	//	{Input} ("range" range=ValueRange)? ("value-list" valueList=ValueList)? ("value-exception" valueHandling=STRING)?
	//	("granularity" granularity=BigUnitValue)? ("arrival-rate-avg" arrivalRateAvg=BigUnitValue)? ("arrival-rate-minimum"
	//	arrivalRateMinimum=BigUnitValue)? ("arrival-rate-maximum" arrivalRateMaximum=BigUnitValue)? ("obsolescence"
	//	obsolescence=BigUnitValue)? ("references" references=STRING)? ("appears-in" appearsIn=STRING)? ("description"
	//	description=STRING)? ("comments" comments=STRING)? ("triggering" structure=TriggerTable)?;
	public InputElements getInputAccess() {
		return (pInput != null) ? pInput : (pInput = new InputElements());
	}
	
	public ParserRule getInputRule() {
		return getInputAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}

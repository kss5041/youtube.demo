/*
* generated by Xtext
*/
package net.certware.intent.state.ui.labeling

import com.google.inject.Inject
import net.certware.intent.state.stateSpecification.Specification
import net.certware.intent.state.stateSpecification.Component
import net.certware.intent.state.stateSpecification.Device
import net.certware.intent.state.stateSpecification.DeviceInput
import net.certware.intent.state.stateSpecification.DeviceOutput
import net.certware.intent.state.stateSpecification.ComponentInput
import net.certware.intent.state.stateSpecification.ComponentOutput
import net.certware.intent.state.stateSpecification.StateVariable
import net.certware.intent.state.stateSpecification.ModeVariable
import net.certware.intent.state.stateSpecification.ModeElement
import net.certware.intent.state.stateSpecification.StateElement
import net.certware.intent.state.stateSpecification.Mode
import net.certware.intent.state.stateSpecification.State

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class StateSpecificationLabelProvider extends org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider {

	@Inject
	new(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	def image(Specification e) {
		'obj16/specification.gif'
	}

    def image(Component e) {
    	'obj16/component.gif'
    }	
    
    def image(Device e) {
    	'obj16/device.gif'
    }
    
    def image(DeviceInput e) {
    	'obj16/deviceinput.gif'
    }
    
    def image(DeviceOutput e) {
    	'obj16/deviceoutput.gif'
    }
    
    def image(ComponentInput e) {
    	'obj16/componentinput.png'
    }
    
    def image(ComponentOutput e) {
    	'obj16/componentoutput.png'
    }
    
    def image(StateVariable e) {
    	'obj16/statevariable.gif'
    }
    
    def image(ModeVariable e) {
    	'obj16/modevariable.gif'
    }

    def image(Mode m) {
    	'obj16/mode.gif'
    }
    
    def image(State s) {
    	'obj16/state.gif'
    }
    
    // labels
    
    def text(Specification s) {
    	'Specification' + ' ' + s.name
    }
    
    def text(Component c) {
    	'Component' + ' ' + c.name
    }
    
    def text(Device d) {
    	'Device' + ' ' + d.name
    }
    
    def text(ModeVariable m) {
    	'Mode' + ' ' + m.desc
    }
    
    def text(StateVariable s) {
    	'State' + ' ' + s.desc
    }
    
    def text(ModeElement m) {
    	'Mode Element'
    }
    
    def text(StateElement s) {
    	'State Element'
    }
    
	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
}

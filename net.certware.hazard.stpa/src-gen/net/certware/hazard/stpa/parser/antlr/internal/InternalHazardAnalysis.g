/*
* generated by Xtext
*/
grammar InternalHazardAnalysis;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package net.certware.hazard.stpa.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package net.certware.hazard.stpa.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import net.certware.hazard.stpa.services.HazardAnalysisGrammarAccess;

}

@parser::members {

 	private HazardAnalysisGrammarAccess grammarAccess;
 	
    public InternalHazardAnalysisParser(TokenStream input, HazardAnalysisGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected HazardAnalysisGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getAccidentsAccidentParserRuleCall_0_0()); 
	    }
		lv_accidents_0_0=ruleAccident		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"accidents",
        		lv_accidents_0_0, 
        		"Accident");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getIndicentsIncidentParserRuleCall_1_0()); 
	    }
		lv_indicents_1_0=ruleIncident		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"indicents",
        		lv_indicents_1_0, 
        		"Incident");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAccident
entryRuleAccident returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAccidentRule()); }
	 iv_ruleAccident=ruleAccident 
	 { $current=$iv_ruleAccident.current; } 
	 EOF 
;

// Rule Accident
ruleAccident returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Accident' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAccidentAccess().getAccidentKeyword_0());
    }
(
(
		lv_desc_1_0=RULE_STRING
		{
			newLeafNode(lv_desc_1_0, grammarAccess.getAccidentAccess().getDescSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAccidentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"desc",
        		lv_desc_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAccidentAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAccidentAccess().getRankingRankingParserRuleCall_3_0()); 
	    }
		lv_ranking_3_0=ruleRanking		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccidentRule());
	        }
       		set(
       			$current, 
       			"ranking",
        		lv_ranking_3_0, 
        		"Ranking");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAccidentAccess().getHazardsHazardParserRuleCall_4_0()); 
	    }
		lv_hazards_4_0=ruleHazard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccidentRule());
	        }
       		add(
       			$current, 
       			"hazards",
        		lv_hazards_4_0, 
        		"Hazard");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getAccidentAccess().getNotesNoteParserRuleCall_5_0()); 
	    }
		lv_notes_5_0=ruleNote		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccidentRule());
	        }
       		add(
       			$current, 
       			"notes",
        		lv_notes_5_0, 
        		"Note");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAccidentAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleIncident
entryRuleIncident returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncidentRule()); }
	 iv_ruleIncident=ruleIncident 
	 { $current=$iv_ruleIncident.current; } 
	 EOF 
;

// Rule Incident
ruleIncident returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Incident' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIncidentAccess().getIncidentKeyword_0());
    }
(
(
		lv_desc_1_0=RULE_STRING
		{
			newLeafNode(lv_desc_1_0, grammarAccess.getIncidentAccess().getDescSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncidentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"desc",
        		lv_desc_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIncidentAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIncidentAccess().getRankingRankingParserRuleCall_3_0()); 
	    }
		lv_ranking_3_0=ruleRanking		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncidentRule());
	        }
       		set(
       			$current, 
       			"ranking",
        		lv_ranking_3_0, 
        		"Ranking");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIncidentAccess().getHazardsHazardParserRuleCall_4_0()); 
	    }
		lv_hazards_4_0=ruleHazard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncidentRule());
	        }
       		add(
       			$current, 
       			"hazards",
        		lv_hazards_4_0, 
        		"Hazard");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getIncidentAccess().getNotesNoteParserRuleCall_5_0()); 
	    }
		lv_notes_5_0=ruleNote		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncidentRule());
	        }
       		add(
       			$current, 
       			"notes",
        		lv_notes_5_0, 
        		"Note");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIncidentAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleRanking
entryRuleRanking returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRankingRule()); } 
	 iv_ruleRanking=ruleRanking 
	 { $current=$iv_ruleRanking.current.getText(); }  
	 EOF 
;

// Rule Ranking
ruleRanking returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='Severity' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRankingAccess().getSeverityKeyword_0_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getRankingAccess().getIDTerminalRuleCall_0_1()); 
    }
)
    |(
	kw='Priority' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRankingAccess().getPriorityKeyword_1_0()); 
    }
    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    newLeafNode(this_ID_3, grammarAccess.getRankingAccess().getIDTerminalRuleCall_1_1()); 
    }
))
    ;





// Entry rule entryRuleHazard
entryRuleHazard returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHazardRule()); }
	 iv_ruleHazard=ruleHazard 
	 { $current=$iv_ruleHazard.current; } 
	 EOF 
;

// Rule Hazard
ruleHazard returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Hazard' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHazardAccess().getHazardKeyword_0());
    }
(
(
		lv_desc_1_0=RULE_STRING
		{
			newLeafNode(lv_desc_1_0, grammarAccess.getHazardAccess().getDescSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHazardRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"desc",
        		lv_desc_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHazardAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHazardAccess().getLevelHazardLevelParserRuleCall_3_0()); 
	    }
		lv_level_3_0=ruleHazardLevel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHazardRule());
	        }
       		set(
       			$current, 
       			"level",
        		lv_level_3_0, 
        		"HazardLevel");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getHazardAccess().getRiskRiskLevelParserRuleCall_4_0()); 
	    }
		lv_risk_4_0=ruleRiskLevel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHazardRule());
	        }
       		set(
       			$current, 
       			"risk",
        		lv_risk_4_0, 
        		"RiskLevel");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getHazardAccess().getConstraintsConstraintParserRuleCall_5_0()); 
	    }
		lv_constraints_5_0=ruleConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHazardRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_5_0, 
        		"Constraint");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHazardAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleRiskLevel
entryRuleRiskLevel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRiskLevelRule()); }
	 iv_ruleRiskLevel=ruleRiskLevel 
	 { $current=$iv_ruleRiskLevel.current; } 
	 EOF 
;

// Rule RiskLevel
ruleRiskLevel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Risk' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRiskLevelAccess().getRiskKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRiskLevelAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRiskLevelAccess().getExposureHazardExposureParserRuleCall_2_0()); 
	    }
		lv_exposure_2_0=ruleHazardExposure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRiskLevelRule());
	        }
       		set(
       			$current, 
       			"exposure",
        		lv_exposure_2_0, 
        		"HazardExposure");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRiskLevelAccess().getLikelihoodHazardAccidentLikelihoodParserRuleCall_3_0()); 
	    }
		lv_likelihood_3_0=ruleHazardAccidentLikelihood		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRiskLevelRule());
	        }
       		set(
       			$current, 
       			"likelihood",
        		lv_likelihood_3_0, 
        		"HazardAccidentLikelihood");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRiskLevelAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleHazardLevel
entryRuleHazardLevel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHazardLevelRule()); }
	 iv_ruleHazardLevel=ruleHazardLevel 
	 { $current=$iv_ruleHazardLevel.current; } 
	 EOF 
;

// Rule HazardLevel
ruleHazardLevel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Severity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHazardLevelAccess().getSeverityKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHazardLevelAccess().getSeverityHazardSeverityParserRuleCall_1_0()); 
	    }
		lv_severity_1_0=ruleHazardSeverity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHazardLevelRule());
	        }
       		set(
       			$current, 
       			"severity",
        		lv_severity_1_0, 
        		"HazardSeverity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='Likelihood' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHazardLevelAccess().getLikelihoodKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHazardLevelAccess().getLikelihoodHazardLikelihoodParserRuleCall_3_0()); 
	    }
		lv_likelihood_3_0=ruleHazardLikelihood		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHazardLevelRule());
	        }
       		set(
       			$current, 
       			"likelihood",
        		lv_likelihood_3_0, 
        		"HazardLikelihood");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleHazardExposure
entryRuleHazardExposure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHazardExposureRule()); }
	 iv_ruleHazardExposure=ruleHazardExposure 
	 { $current=$iv_ruleHazardExposure.current; } 
	 EOF 
;

// Rule HazardExposure
ruleHazardExposure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Exposure' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHazardExposureAccess().getExposureKeyword_0());
    }
(
(
		lv_exposure_1_0=RULE_STRING
		{
			newLeafNode(lv_exposure_1_0, grammarAccess.getHazardExposureAccess().getExposureSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHazardExposureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"exposure",
        		lv_exposure_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleHazardAccidentLikelihood
entryRuleHazardAccidentLikelihood returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHazardAccidentLikelihoodRule()); }
	 iv_ruleHazardAccidentLikelihood=ruleHazardAccidentLikelihood 
	 { $current=$iv_ruleHazardAccidentLikelihood.current; } 
	 EOF 
;

// Rule HazardAccidentLikelihood
ruleHazardAccidentLikelihood returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Likelihood' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHazardAccidentLikelihoodAccess().getLikelihoodKeyword_0());
    }
(
(
		lv_likelihood_1_0=RULE_STRING
		{
			newLeafNode(lv_likelihood_1_0, grammarAccess.getHazardAccidentLikelihoodAccess().getLikelihoodSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHazardAccidentLikelihoodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"likelihood",
        		lv_likelihood_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleHazardSeverity
entryRuleHazardSeverity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHazardSeverityRule()); }
	 iv_ruleHazardSeverity=ruleHazardSeverity 
	 { $current=$iv_ruleHazardSeverity.current; } 
	 EOF 
;

// Rule HazardSeverity
ruleHazardSeverity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_ID
		{
			newLeafNode(lv_value_0_0, grammarAccess.getHazardSeverityAccess().getValueIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHazardSeverityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleHazardLikelihood
entryRuleHazardLikelihood returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHazardLikelihoodRule()); }
	 iv_ruleHazardLikelihood=ruleHazardLikelihood 
	 { $current=$iv_ruleHazardLikelihood.current; } 
	 EOF 
;

// Rule HazardLikelihood
ruleHazardLikelihood returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_ID
		{
			newLeafNode(lv_value_0_0, grammarAccess.getHazardLikelihoodAccess().getValueIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHazardLikelihoodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	 iv_ruleConstraint=ruleConstraint 
	 { $current=$iv_ruleConstraint.current; } 
	 EOF 
;

// Rule Constraint
ruleConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Constraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstraintAccess().getConstraintKeyword_0());
    }
(
(
		lv_constraint_1_0=RULE_STRING
		{
			newLeafNode(lv_constraint_1_0, grammarAccess.getConstraintAccess().getConstraintSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"constraint",
        		lv_constraint_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getRequirementsRequirementParserRuleCall_3_0()); 
	    }
		lv_requirements_3_0=ruleRequirement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		add(
       			$current, 
       			"requirements",
        		lv_requirements_3_0, 
        		"Requirement");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getScenariosScenarioParserRuleCall_4_0()); 
	    }
		lv_scenarios_4_0=ruleScenario		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		add(
       			$current, 
       			"scenarios",
        		lv_scenarios_4_0, 
        		"Scenario");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getControlsControlParserRuleCall_5_0()); 
	    }
		lv_controls_5_0=ruleControl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		add(
       			$current, 
       			"controls",
        		lv_controls_5_0, 
        		"Control");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getNotesNoteParserRuleCall_6_0()); 
	    }
		lv_notes_6_0=ruleNote		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		add(
       			$current, 
       			"notes",
        		lv_notes_6_0, 
        		"Note");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	 iv_ruleRequirement=ruleRequirement 
	 { $current=$iv_ruleRequirement.current; } 
	 EOF 
;

// Rule Requirement
ruleRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Requirement' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequirementAccess().getRequirementKeyword_0());
    }
(
(
		lv_requirement_1_0=RULE_STRING
		{
			newLeafNode(lv_requirement_1_0, grammarAccess.getRequirementAccess().getRequirementSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"requirement",
        		lv_requirement_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDesignsDesignParserRuleCall_3_0()); 
	    }
		lv_designs_3_0=ruleDesign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"designs",
        		lv_designs_3_0, 
        		"Design");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getNotesNoteParserRuleCall_4_0()); 
	    }
		lv_notes_4_0=ruleNote		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"notes",
        		lv_notes_4_0, 
        		"Note");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDesign
entryRuleDesign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesignRule()); }
	 iv_ruleDesign=ruleDesign 
	 { $current=$iv_ruleDesign.current; } 
	 EOF 
;

// Rule Design
ruleDesign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Allocation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDesignAccess().getAllocationKeyword_0());
    }
(
(
		lv_allocation_1_0=RULE_STRING
		{
			newLeafNode(lv_allocation_1_0, grammarAccess.getDesignAccess().getAllocationSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDesignRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"allocation",
        		lv_allocation_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2='Analysis' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDesignAccess().getAnalysisKeyword_2_0());
    }
(
(
		lv_analysis_3_0=RULE_STRING
		{
			newLeafNode(lv_analysis_3_0, grammarAccess.getDesignAccess().getAnalysisSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDesignRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"analysis",
        		lv_analysis_3_0, 
        		"STRING");
	    }

)
))?(	otherlv_4='Rationale' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDesignAccess().getRationaleKeyword_3_0());
    }
(
(
		lv_rationale_5_0=RULE_STRING
		{
			newLeafNode(lv_rationale_5_0, grammarAccess.getDesignAccess().getRationaleSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDesignRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rationale",
        		lv_rationale_5_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	 iv_ruleScenario=ruleScenario 
	 { $current=$iv_ruleScenario.current; } 
	 EOF 
;

// Rule Scenario
ruleScenario returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Scenario' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScenarioAccess().getScenarioKeyword_0());
    }
(
(
		lv_scenario_1_0=RULE_STRING
		{
			newLeafNode(lv_scenario_1_0, grammarAccess.getScenarioAccess().getScenarioSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScenarioRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"scenario",
        		lv_scenario_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScenarioAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleControl
entryRuleControl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getControlRule()); }
	 iv_ruleControl=ruleControl 
	 { $current=$iv_ruleControl.current; } 
	 EOF 
;

// Rule Control
ruleControl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Control' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getControlAccess().getControlKeyword_0());
    }
(
(
		lv_control_1_0=RULE_STRING
		{
			newLeafNode(lv_control_1_0, grammarAccess.getControlAccess().getControlSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getControlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"control",
        		lv_control_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getControlAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleNote
entryRuleNote returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoteRule()); }
	 iv_ruleNote=ruleNote 
	 { $current=$iv_ruleNote.current; } 
	 EOF 
;

// Rule Note
ruleNote returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Note' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNoteAccess().getNoteKeyword_0());
    }
(
(
		lv_note_1_0=RULE_STRING
		{
			newLeafNode(lv_note_1_0, grammarAccess.getNoteAccess().getNoteSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNoteRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"note",
        		lv_note_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNoteAccess().getSemicolonKeyword_2());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


